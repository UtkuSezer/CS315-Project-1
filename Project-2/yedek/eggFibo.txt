# 
Fibonacci Calculator
		by Apocalyptic Games
Written in Egg Language
Date: 28.02.2021
#

int calculateFibo(int n){

	int first_number = 0;
	int second_number = 1;
	int newNumber;
	
	if( n > 0 ){
		##If input is 1 or 2, no nedd for calculation
		if( n == 1 | n == 2 ){
			if( n == 1 ){
				return 0;
			}
			else{
				return 1;
			}
		}
		##Calculating Fibonacci number
		else{
			for( int i = 2; i < n ; i = i + 1 ){
				newNumber = first_number + second_number;
				first_number = second_number;
				second_number = newNumber;
			}
			return newNumber;
		}
	}
	##Invalid input
	else{
		return -1;
	}
}
  
main(){

	int n;
	int choice;
	bool exit;
	string input;
	int numb1, numb2;
	int maxNumb, minNumb;
	int powResult;

	eggout("Welcome to Fibonacci number calculator! Please enter your name to start: ");
	eggin(input);

	const string name = input;

	eggout(\n + "Hello " + name + " !" + \n );

	eggout("-------------------------------------------------" + \n);
	eggout("Please enter 2 different numbers (just for fun): ");
	eggin(numb1, numb2);
	maxNumb = max(numb1, numb2);
	minNumb = min(numb1, numb2);
	eggout("Max: " + maxNumb + " Min: " + minNumb + \n );
	powResult = pow(maxNumb , minNumb);
	eggout("Max^Min: " + powResult + \n );
	eggout("-------------------------------------------------" + \n);
	
	
	do{
		eggout("Please enter a number 'n' to get n'th Fibonacci number: ");
		eggin(n);
		eggout(\n + "*******************************************************" + \n);

		if( funct_calculateFibo(n) == -1 ){
			eggout("Invalid input! " + \n);
		}
		else{
			eggout(n + "'th Fibonacci number is " + newNumber + \n);
		}

		##Ask user to continue or exit
		eggout("Please enter 1 to continue or 0 to exit: ");
		eggin(choice);

		if( choice == 0 ){
			exit = true;		
		}
		else{
			if(choice != 1){
				eggout("Invalid choice! Exiting... " + \n);
				exit = true;	
			}
			else{
				eggout("Continuing... " + \n);
				exit = false;
			}
		}

	}while( !exit ); ##Continue until choice input is 0 or invalid 

	eggout("Bye " + name + "!" );
}
