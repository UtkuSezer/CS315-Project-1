   0  $accept : program $end

   1  program : stmts
   2          | NEW_LINE

   3  stmts : stmt NEW_LINE
   4        | stmts stmt NEW_LINE

   5  stmt : matched_stmt
   6       | unmatched_stmt

   7  matched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB matched_stmt RCB
   8               | non_if_stmt

   9  unmatched_stmt : IF LP logical_expression RP LCB stmts RCB
  10                 | IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB unmatched_stmt RCB

  11  non_if_stmt :
  12              | loops
  13              | arithmetic_operations SEMICOLON
  14              | function_call
  15              | function_declaration
  16              | declaration
  17              | initialization
  18              | declaration_and_initialization
  19              | input_stmt
  20              | output_stmt
  21              | COMMENT
  22              | LINE_COMMENT

  23  loops : while_loop
  24        | for_loop
  25        | do_while_loop

  26  while_loop : WHILE LP logical_expression RP LCB stmts RCB

  27  for_loop : FOR LP loop_initialization logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB

  28  do_while_loop : DO LCB stmts RCB WHILE LP logical_expression RP SEMICOLON

  29  loop_initialization : initialization
  30                      | declaration_and_initialization

  31  logical_expression : recursive_expression

  32  single_expression : term logical_operator term
  33                    | BOOL_STMT
  34                    | NOT BOOL_STMT

  35  recursive_expression : recursive_expression logical_connector single_expression
  36                       | single_expression

  37  term : var

  38  var : IDENTIFIER

  39  logical_connector : AND
  40                    | OR

  41  logical_operator : IS_EQUAL_OP
  42                   | NOT_EQUAL_OP
  43                   | NOT
  44                   | GT
  45                   | LT
  46                   | GTE
  47                   | LTE

  48  arithmetic_operations : arithmetic_operations PLUS divisionAndMultiplication
  49                        | arithmetic_operations MINUS divisionAndMultiplication
  50                        | divisionAndMultiplication
  51                        | modulo
  52                        | sqrt
  53                        | power
  54                        | max
  55                        | min

  56  divisionAndMultiplication : divisionAndMultiplication DIVIDE_OP factor
  57                            | divisionAndMultiplication MULTIPLY_OP factor
  58                            | factor

  59  modulo : factor MOD_OP factor

  60  power : POW LP INT_STMT COMMA INT_STMT RP
  61        | POW LP INT_STMT COMMA DOUBLE_STMT RP
  62        | POW LP DOUBLE_STMT COMMA INT_STMT RP
  63        | POW LP DOUBLE_STMT COMMA DOUBLE_STMT RP

  64  constant_identifier : CONST term

  65  factor : LP term RP
  66         | term

  67  max : MAX LP INT_STMT COMMA INT_STMT RP
  68      | MAX LP DOUBLE_STMT COMMA DOUBLE_STMT RP

  69  min : MIN LP INT_STMT COMMA INT_STMT RP
  70      | MIN LP DOUBLE_STMT RP COMMA DOUBLE_STMT RP

  71  sqrt : SQUARE_ROOT LP INT_STMT RP
  72       | SQUARE_ROOT LP DOUBLE_STMT RP

  73  declaration : types term SEMICOLON
  74              | types constant_identifier SEMICOLON

  75  types : INT
  76        | DOUBLE
  77        | STRING
  78        | CHAR
  79        | BOOL

  80  function_call : CALL IDENTIFIER LP IDENTIFIER RP SEMICOLON

  81  initialization : term assignment_operator assignment_values SEMICOLON

  82  declaration_and_initialization : types term assignment_operator assignment_values SEMICOLON
  83                                 | types constant_identifier assignment_operator assignment_values SEMICOLON

  84  assignment_operator : ASSIGN_OP
  85                      | DIVIDE_ASSIGN_OP
  86                      | MULTIPLY_ASSIGN_OP
  87                      | MOD_ASSIGN_OP
  88                      | PLUS_ASSIGN_OP
  89                      | MINUS_ASSIGN_OP

  90  assignment_values : BOOL_STMT
  91                    | INT_STMT
  92                    | STRING_STMT
  93                    | DOUBLE_STMT
  94                    | CHAR_STMT

  95  input_stmt : EGG_IN LP input_context RP SEMICOLON

  96  output_stmt : EGG_OUT LP output_context RP SEMICOLON

  97  input_context : term PLUS input_context
  98                | term

  99  output_context : term
 100                 | assignment_values
 101                 | term PLUS output_context
 102                 | assignment_values PLUS output_context

 103  function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts RCB
 104                       | types IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values SEMICOLON RCB
 105                       | VOID IDENTIFIER LP parameter RP LCB stmts RETURN VOID SEMICOLON RCB

 106  parameter : parameter COMMA types IDENTIFIER
 107            | types IDENTIFIER

0: shift/reduce conflict (shift 3, reduce 11) on NEW_LINE
state 0
	$accept : . program $end  (0)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	NEW_LINE  shift 3
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22

	program  goto 23
	stmts  goto 24
	stmt  goto 25
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 1
	function_call : CALL . IDENTIFIER LP IDENTIFIER RP SEMICOLON  (80)

	IDENTIFIER  shift 51
	.  error


state 2
	factor : LP . term RP  (65)

	IDENTIFIER  shift 20
	.  error

	term  goto 52
	var  goto 42


state 3
	program : NEW_LINE .  (2)

	.  reduce 2


state 4
	input_stmt : EGG_IN . LP input_context RP SEMICOLON  (95)

	LP  shift 53
	.  error


state 5
	output_stmt : EGG_OUT . LP output_context RP SEMICOLON  (96)

	LP  shift 54
	.  error


state 6
	types : INT .  (75)

	.  reduce 75


state 7
	types : DOUBLE .  (76)

	.  reduce 76


state 8
	types : STRING .  (77)

	.  reduce 77


state 9
	types : CHAR .  (78)

	.  reduce 78


state 10
	types : BOOL .  (79)

	.  reduce 79


state 11
	matched_stmt : IF . LP logical_expression RP LCB matched_stmt RCB ELSE LCB matched_stmt RCB  (7)
	unmatched_stmt : IF . LP logical_expression RP LCB stmts RCB  (9)
	unmatched_stmt : IF . LP logical_expression RP LCB matched_stmt RCB ELSE LCB unmatched_stmt RCB  (10)

	LP  shift 55
	.  error


state 12
	for_loop : FOR . LP loop_initialization logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB  (27)

	LP  shift 56
	.  error


state 13
	while_loop : WHILE . LP logical_expression RP LCB stmts RCB  (26)

	LP  shift 57
	.  error


state 14
	do_while_loop : DO . LCB stmts RCB WHILE LP logical_expression RP SEMICOLON  (28)

	LCB  shift 58
	.  error


state 15
	function_declaration : VOID . IDENTIFIER LP parameter RP LCB stmts RCB  (103)
	function_declaration : VOID . IDENTIFIER LP parameter RP LCB stmts RETURN VOID SEMICOLON RCB  (105)

	IDENTIFIER  shift 59
	.  error


state 16
	power : POW . LP INT_STMT COMMA INT_STMT RP  (60)
	power : POW . LP INT_STMT COMMA DOUBLE_STMT RP  (61)
	power : POW . LP DOUBLE_STMT COMMA INT_STMT RP  (62)
	power : POW . LP DOUBLE_STMT COMMA DOUBLE_STMT RP  (63)

	LP  shift 60
	.  error


state 17
	max : MAX . LP INT_STMT COMMA INT_STMT RP  (67)
	max : MAX . LP DOUBLE_STMT COMMA DOUBLE_STMT RP  (68)

	LP  shift 61
	.  error


state 18
	min : MIN . LP INT_STMT COMMA INT_STMT RP  (69)
	min : MIN . LP DOUBLE_STMT RP COMMA DOUBLE_STMT RP  (70)

	LP  shift 62
	.  error


state 19
	sqrt : SQUARE_ROOT . LP INT_STMT RP  (71)
	sqrt : SQUARE_ROOT . LP DOUBLE_STMT RP  (72)

	LP  shift 63
	.  error


state 20
	var : IDENTIFIER .  (38)

	.  reduce 38


state 21
	non_if_stmt : COMMENT .  (21)

	.  reduce 21


state 22
	non_if_stmt : LINE_COMMENT .  (22)

	.  reduce 22


state 23
	$accept : program . $end  (0)

	$end  accept


state 24
	program : stmts .  (1)
	stmts : stmts . stmt NEW_LINE  (4)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	$end  reduce 1
	NEW_LINE  reduce 11

	stmt  goto 64
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 25
	stmts : stmt . NEW_LINE  (3)

	NEW_LINE  shift 65
	.  error


state 26
	stmt : matched_stmt .  (5)

	.  reduce 5


state 27
	stmt : unmatched_stmt .  (6)

	.  reduce 6


state 28
	matched_stmt : non_if_stmt .  (8)

	.  reduce 8


state 29
	non_if_stmt : loops .  (12)

	.  reduce 12


state 30
	non_if_stmt : arithmetic_operations . SEMICOLON  (13)
	arithmetic_operations : arithmetic_operations . PLUS divisionAndMultiplication  (48)
	arithmetic_operations : arithmetic_operations . MINUS divisionAndMultiplication  (49)

	SEMICOLON  shift 66
	PLUS  shift 67
	MINUS  shift 68
	.  error


state 31
	non_if_stmt : function_call .  (14)

	.  reduce 14


state 32
	non_if_stmt : function_declaration .  (15)

	.  reduce 15


state 33
	non_if_stmt : declaration .  (16)

	.  reduce 16


state 34
	non_if_stmt : initialization .  (17)

	.  reduce 17


state 35
	non_if_stmt : declaration_and_initialization .  (18)

	.  reduce 18


state 36
	non_if_stmt : input_stmt .  (19)

	.  reduce 19


state 37
	non_if_stmt : output_stmt .  (20)

	.  reduce 20


state 38
	loops : while_loop .  (23)

	.  reduce 23


state 39
	loops : for_loop .  (24)

	.  reduce 24


state 40
	loops : do_while_loop .  (25)

	.  reduce 25


state 41
	factor : term .  (66)
	initialization : term . assignment_operator assignment_values SEMICOLON  (81)

	ASSIGN_OP  shift 69
	DIVIDE_ASSIGN_OP  shift 70
	MULTIPLY_ASSIGN_OP  shift 71
	MOD_ASSIGN_OP  shift 72
	PLUS_ASSIGN_OP  shift 73
	MINUS_ASSIGN_OP  shift 74
	SEMICOLON  reduce 66
	PLUS  reduce 66
	MINUS  reduce 66
	MULTIPLY_OP  reduce 66
	DIVIDE_OP  reduce 66
	MOD_OP  reduce 66

	assignment_operator  goto 75


state 42
	term : var .  (37)

	.  reduce 37


state 43
	arithmetic_operations : divisionAndMultiplication .  (50)
	divisionAndMultiplication : divisionAndMultiplication . DIVIDE_OP factor  (56)
	divisionAndMultiplication : divisionAndMultiplication . MULTIPLY_OP factor  (57)

	MULTIPLY_OP  shift 76
	DIVIDE_OP  shift 77
	RP  reduce 50
	SEMICOLON  reduce 50
	PLUS  reduce 50
	MINUS  reduce 50


state 44
	arithmetic_operations : modulo .  (51)

	.  reduce 51


state 45
	arithmetic_operations : sqrt .  (52)

	.  reduce 52


state 46
	arithmetic_operations : power .  (53)

	.  reduce 53


state 47
	arithmetic_operations : max .  (54)

	.  reduce 54


state 48
	arithmetic_operations : min .  (55)

	.  reduce 55


state 49
	divisionAndMultiplication : factor .  (58)
	modulo : factor . MOD_OP factor  (59)

	MOD_OP  shift 78
	RP  reduce 58
	SEMICOLON  reduce 58
	PLUS  reduce 58
	MINUS  reduce 58
	MULTIPLY_OP  reduce 58
	DIVIDE_OP  reduce 58


state 50
	declaration : types . term SEMICOLON  (73)
	declaration : types . constant_identifier SEMICOLON  (74)
	declaration_and_initialization : types . term assignment_operator assignment_values SEMICOLON  (82)
	declaration_and_initialization : types . constant_identifier assignment_operator assignment_values SEMICOLON  (83)
	function_declaration : types . IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values SEMICOLON RCB  (104)

	CONST  shift 79
	IDENTIFIER  shift 80
	.  error

	term  goto 81
	var  goto 42
	constant_identifier  goto 82


state 51
	function_call : CALL IDENTIFIER . LP IDENTIFIER RP SEMICOLON  (80)

	LP  shift 83
	.  error


state 52
	factor : LP term . RP  (65)

	RP  shift 84
	.  error


state 53
	input_stmt : EGG_IN LP . input_context RP SEMICOLON  (95)

	IDENTIFIER  shift 20
	.  error

	term  goto 85
	var  goto 42
	input_context  goto 86


state 54
	output_stmt : EGG_OUT LP . output_context RP SEMICOLON  (96)

	BOOL_STMT  shift 87
	STRING_STMT  shift 88
	INT_STMT  shift 89
	DOUBLE_STMT  shift 90
	CHAR_STMT  shift 91
	IDENTIFIER  shift 20
	.  error

	term  goto 92
	var  goto 42
	assignment_values  goto 93
	output_context  goto 94


state 55
	matched_stmt : IF LP . logical_expression RP LCB matched_stmt RCB ELSE LCB matched_stmt RCB  (7)
	unmatched_stmt : IF LP . logical_expression RP LCB stmts RCB  (9)
	unmatched_stmt : IF LP . logical_expression RP LCB matched_stmt RCB ELSE LCB unmatched_stmt RCB  (10)

	NOT  shift 95
	BOOL_STMT  shift 96
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 97
	recursive_expression  goto 98
	single_expression  goto 99
	term  goto 100
	var  goto 42


state 56
	for_loop : FOR LP . loop_initialization logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB  (27)

	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IDENTIFIER  shift 20
	.  error

	initialization  goto 101
	declaration_and_initialization  goto 102
	loop_initialization  goto 103
	term  goto 104
	var  goto 42
	types  goto 105


state 57
	while_loop : WHILE LP . logical_expression RP LCB stmts RCB  (26)

	NOT  shift 95
	BOOL_STMT  shift 96
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 106
	recursive_expression  goto 98
	single_expression  goto 99
	term  goto 100
	var  goto 42


state 58
	do_while_loop : DO LCB . stmts RCB WHILE LP logical_expression RP SEMICOLON  (28)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmts  goto 107
	stmt  goto 25
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 59
	function_declaration : VOID IDENTIFIER . LP parameter RP LCB stmts RCB  (103)
	function_declaration : VOID IDENTIFIER . LP parameter RP LCB stmts RETURN VOID SEMICOLON RCB  (105)

	LP  shift 108
	.  error


state 60
	power : POW LP . INT_STMT COMMA INT_STMT RP  (60)
	power : POW LP . INT_STMT COMMA DOUBLE_STMT RP  (61)
	power : POW LP . DOUBLE_STMT COMMA INT_STMT RP  (62)
	power : POW LP . DOUBLE_STMT COMMA DOUBLE_STMT RP  (63)

	INT_STMT  shift 109
	DOUBLE_STMT  shift 110
	.  error


state 61
	max : MAX LP . INT_STMT COMMA INT_STMT RP  (67)
	max : MAX LP . DOUBLE_STMT COMMA DOUBLE_STMT RP  (68)

	INT_STMT  shift 111
	DOUBLE_STMT  shift 112
	.  error


state 62
	min : MIN LP . INT_STMT COMMA INT_STMT RP  (69)
	min : MIN LP . DOUBLE_STMT RP COMMA DOUBLE_STMT RP  (70)

	INT_STMT  shift 113
	DOUBLE_STMT  shift 114
	.  error


state 63
	sqrt : SQUARE_ROOT LP . INT_STMT RP  (71)
	sqrt : SQUARE_ROOT LP . DOUBLE_STMT RP  (72)

	INT_STMT  shift 115
	DOUBLE_STMT  shift 116
	.  error


state 64
	stmts : stmts stmt . NEW_LINE  (4)

	NEW_LINE  shift 117
	.  error


state 65
	stmts : stmt NEW_LINE .  (3)

	.  reduce 3


state 66
	non_if_stmt : arithmetic_operations SEMICOLON .  (13)

	.  reduce 13


state 67
	arithmetic_operations : arithmetic_operations PLUS . divisionAndMultiplication  (48)

	LP  shift 2
	IDENTIFIER  shift 20
	.  error

	term  goto 118
	var  goto 42
	divisionAndMultiplication  goto 119
	factor  goto 120


state 68
	arithmetic_operations : arithmetic_operations MINUS . divisionAndMultiplication  (49)

	LP  shift 2
	IDENTIFIER  shift 20
	.  error

	term  goto 118
	var  goto 42
	divisionAndMultiplication  goto 121
	factor  goto 120


state 69
	assignment_operator : ASSIGN_OP .  (84)

	.  reduce 84


state 70
	assignment_operator : DIVIDE_ASSIGN_OP .  (85)

	.  reduce 85


state 71
	assignment_operator : MULTIPLY_ASSIGN_OP .  (86)

	.  reduce 86


state 72
	assignment_operator : MOD_ASSIGN_OP .  (87)

	.  reduce 87


state 73
	assignment_operator : PLUS_ASSIGN_OP .  (88)

	.  reduce 88


state 74
	assignment_operator : MINUS_ASSIGN_OP .  (89)

	.  reduce 89


state 75
	initialization : term assignment_operator . assignment_values SEMICOLON  (81)

	BOOL_STMT  shift 87
	STRING_STMT  shift 88
	INT_STMT  shift 89
	DOUBLE_STMT  shift 90
	CHAR_STMT  shift 91
	.  error

	assignment_values  goto 122


state 76
	divisionAndMultiplication : divisionAndMultiplication MULTIPLY_OP . factor  (57)

	LP  shift 2
	IDENTIFIER  shift 20
	.  error

	term  goto 118
	var  goto 42
	factor  goto 123


state 77
	divisionAndMultiplication : divisionAndMultiplication DIVIDE_OP . factor  (56)

	LP  shift 2
	IDENTIFIER  shift 20
	.  error

	term  goto 118
	var  goto 42
	factor  goto 124


state 78
	modulo : factor MOD_OP . factor  (59)

	LP  shift 2
	IDENTIFIER  shift 20
	.  error

	term  goto 118
	var  goto 42
	factor  goto 125


state 79
	constant_identifier : CONST . term  (64)

	IDENTIFIER  shift 20
	.  error

	term  goto 126
	var  goto 42


state 80
	var : IDENTIFIER .  (38)
	function_declaration : types IDENTIFIER . LP parameter RP LCB stmts RETURN assignment_values SEMICOLON RCB  (104)

	LP  shift 127
	SEMICOLON  reduce 38
	ASSIGN_OP  reduce 38
	DIVIDE_ASSIGN_OP  reduce 38
	MULTIPLY_ASSIGN_OP  reduce 38
	MOD_ASSIGN_OP  reduce 38
	PLUS_ASSIGN_OP  reduce 38
	MINUS_ASSIGN_OP  reduce 38


state 81
	declaration : types term . SEMICOLON  (73)
	declaration_and_initialization : types term . assignment_operator assignment_values SEMICOLON  (82)

	SEMICOLON  shift 128
	ASSIGN_OP  shift 69
	DIVIDE_ASSIGN_OP  shift 70
	MULTIPLY_ASSIGN_OP  shift 71
	MOD_ASSIGN_OP  shift 72
	PLUS_ASSIGN_OP  shift 73
	MINUS_ASSIGN_OP  shift 74
	.  error

	assignment_operator  goto 129


state 82
	declaration : types constant_identifier . SEMICOLON  (74)
	declaration_and_initialization : types constant_identifier . assignment_operator assignment_values SEMICOLON  (83)

	SEMICOLON  shift 130
	ASSIGN_OP  shift 69
	DIVIDE_ASSIGN_OP  shift 70
	MULTIPLY_ASSIGN_OP  shift 71
	MOD_ASSIGN_OP  shift 72
	PLUS_ASSIGN_OP  shift 73
	MINUS_ASSIGN_OP  shift 74
	.  error

	assignment_operator  goto 131


state 83
	function_call : CALL IDENTIFIER LP . IDENTIFIER RP SEMICOLON  (80)

	IDENTIFIER  shift 132
	.  error


state 84
	factor : LP term RP .  (65)

	.  reduce 65


state 85
	input_context : term . PLUS input_context  (97)
	input_context : term .  (98)

	PLUS  shift 133
	RP  reduce 98


state 86
	input_stmt : EGG_IN LP input_context . RP SEMICOLON  (95)

	RP  shift 134
	.  error


state 87
	assignment_values : BOOL_STMT .  (90)

	.  reduce 90


state 88
	assignment_values : STRING_STMT .  (92)

	.  reduce 92


state 89
	assignment_values : INT_STMT .  (91)

	.  reduce 91


state 90
	assignment_values : DOUBLE_STMT .  (93)

	.  reduce 93


state 91
	assignment_values : CHAR_STMT .  (94)

	.  reduce 94


state 92
	output_context : term .  (99)
	output_context : term . PLUS output_context  (101)

	PLUS  shift 135
	RP  reduce 99


state 93
	output_context : assignment_values .  (100)
	output_context : assignment_values . PLUS output_context  (102)

	PLUS  shift 136
	RP  reduce 100


state 94
	output_stmt : EGG_OUT LP output_context . RP SEMICOLON  (96)

	RP  shift 137
	.  error


state 95
	single_expression : NOT . BOOL_STMT  (34)

	BOOL_STMT  shift 138
	.  error


state 96
	single_expression : BOOL_STMT .  (33)

	.  reduce 33


state 97
	matched_stmt : IF LP logical_expression . RP LCB matched_stmt RCB ELSE LCB matched_stmt RCB  (7)
	unmatched_stmt : IF LP logical_expression . RP LCB stmts RCB  (9)
	unmatched_stmt : IF LP logical_expression . RP LCB matched_stmt RCB ELSE LCB unmatched_stmt RCB  (10)

	RP  shift 139
	.  error


state 98
	logical_expression : recursive_expression .  (31)
	recursive_expression : recursive_expression . logical_connector single_expression  (35)

	AND  shift 140
	OR  shift 141
	RP  reduce 31
	SEMICOLON  reduce 31

	logical_connector  goto 142


state 99
	recursive_expression : single_expression .  (36)

	.  reduce 36


state 100
	single_expression : term . logical_operator term  (32)

	NOT  shift 143
	IS_EQUAL_OP  shift 144
	NOT_EQUAL_OP  shift 145
	GT  shift 146
	LT  shift 147
	LTE  shift 148
	GTE  shift 149
	.  error

	logical_operator  goto 150


state 101
	loop_initialization : initialization .  (29)

	.  reduce 29


state 102
	loop_initialization : declaration_and_initialization .  (30)

	.  reduce 30


state 103
	for_loop : FOR LP loop_initialization . logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB  (27)

	NOT  shift 95
	BOOL_STMT  shift 96
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 151
	recursive_expression  goto 98
	single_expression  goto 99
	term  goto 100
	var  goto 42


state 104
	initialization : term . assignment_operator assignment_values SEMICOLON  (81)

	ASSIGN_OP  shift 69
	DIVIDE_ASSIGN_OP  shift 70
	MULTIPLY_ASSIGN_OP  shift 71
	MOD_ASSIGN_OP  shift 72
	PLUS_ASSIGN_OP  shift 73
	MINUS_ASSIGN_OP  shift 74
	.  error

	assignment_operator  goto 75


state 105
	declaration_and_initialization : types . term assignment_operator assignment_values SEMICOLON  (82)
	declaration_and_initialization : types . constant_identifier assignment_operator assignment_values SEMICOLON  (83)

	CONST  shift 79
	IDENTIFIER  shift 20
	.  error

	term  goto 152
	var  goto 42
	constant_identifier  goto 153


state 106
	while_loop : WHILE LP logical_expression . RP LCB stmts RCB  (26)

	RP  shift 154
	.  error


state 107
	stmts : stmts . stmt NEW_LINE  (4)
	do_while_loop : DO LCB stmts . RCB WHILE LP logical_expression RP SEMICOLON  (28)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	RCB  shift 155
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmt  goto 64
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 108
	function_declaration : VOID IDENTIFIER LP . parameter RP LCB stmts RCB  (103)
	function_declaration : VOID IDENTIFIER LP . parameter RP LCB stmts RETURN VOID SEMICOLON RCB  (105)

	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	.  error

	types  goto 156
	parameter  goto 157


state 109
	power : POW LP INT_STMT . COMMA INT_STMT RP  (60)
	power : POW LP INT_STMT . COMMA DOUBLE_STMT RP  (61)

	COMMA  shift 158
	.  error


state 110
	power : POW LP DOUBLE_STMT . COMMA INT_STMT RP  (62)
	power : POW LP DOUBLE_STMT . COMMA DOUBLE_STMT RP  (63)

	COMMA  shift 159
	.  error


state 111
	max : MAX LP INT_STMT . COMMA INT_STMT RP  (67)

	COMMA  shift 160
	.  error


state 112
	max : MAX LP DOUBLE_STMT . COMMA DOUBLE_STMT RP  (68)

	COMMA  shift 161
	.  error


state 113
	min : MIN LP INT_STMT . COMMA INT_STMT RP  (69)

	COMMA  shift 162
	.  error


state 114
	min : MIN LP DOUBLE_STMT . RP COMMA DOUBLE_STMT RP  (70)

	RP  shift 163
	.  error


state 115
	sqrt : SQUARE_ROOT LP INT_STMT . RP  (71)

	RP  shift 164
	.  error


state 116
	sqrt : SQUARE_ROOT LP DOUBLE_STMT . RP  (72)

	RP  shift 165
	.  error


state 117
	stmts : stmts stmt NEW_LINE .  (4)

	.  reduce 4


state 118
	factor : term .  (66)

	.  reduce 66


state 119
	arithmetic_operations : arithmetic_operations PLUS divisionAndMultiplication .  (48)
	divisionAndMultiplication : divisionAndMultiplication . DIVIDE_OP factor  (56)
	divisionAndMultiplication : divisionAndMultiplication . MULTIPLY_OP factor  (57)

	MULTIPLY_OP  shift 76
	DIVIDE_OP  shift 77
	RP  reduce 48
	SEMICOLON  reduce 48
	PLUS  reduce 48
	MINUS  reduce 48


state 120
	divisionAndMultiplication : factor .  (58)

	.  reduce 58


state 121
	arithmetic_operations : arithmetic_operations MINUS divisionAndMultiplication .  (49)
	divisionAndMultiplication : divisionAndMultiplication . DIVIDE_OP factor  (56)
	divisionAndMultiplication : divisionAndMultiplication . MULTIPLY_OP factor  (57)

	MULTIPLY_OP  shift 76
	DIVIDE_OP  shift 77
	RP  reduce 49
	SEMICOLON  reduce 49
	PLUS  reduce 49
	MINUS  reduce 49


state 122
	initialization : term assignment_operator assignment_values . SEMICOLON  (81)

	SEMICOLON  shift 166
	.  error


state 123
	divisionAndMultiplication : divisionAndMultiplication MULTIPLY_OP factor .  (57)

	.  reduce 57


state 124
	divisionAndMultiplication : divisionAndMultiplication DIVIDE_OP factor .  (56)

	.  reduce 56


state 125
	modulo : factor MOD_OP factor .  (59)

	.  reduce 59


state 126
	constant_identifier : CONST term .  (64)

	.  reduce 64


state 127
	function_declaration : types IDENTIFIER LP . parameter RP LCB stmts RETURN assignment_values SEMICOLON RCB  (104)

	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	.  error

	types  goto 156
	parameter  goto 167


state 128
	declaration : types term SEMICOLON .  (73)

	.  reduce 73


state 129
	declaration_and_initialization : types term assignment_operator . assignment_values SEMICOLON  (82)

	BOOL_STMT  shift 87
	STRING_STMT  shift 88
	INT_STMT  shift 89
	DOUBLE_STMT  shift 90
	CHAR_STMT  shift 91
	.  error

	assignment_values  goto 168


state 130
	declaration : types constant_identifier SEMICOLON .  (74)

	.  reduce 74


state 131
	declaration_and_initialization : types constant_identifier assignment_operator . assignment_values SEMICOLON  (83)

	BOOL_STMT  shift 87
	STRING_STMT  shift 88
	INT_STMT  shift 89
	DOUBLE_STMT  shift 90
	CHAR_STMT  shift 91
	.  error

	assignment_values  goto 169


state 132
	function_call : CALL IDENTIFIER LP IDENTIFIER . RP SEMICOLON  (80)

	RP  shift 170
	.  error


state 133
	input_context : term PLUS . input_context  (97)

	IDENTIFIER  shift 20
	.  error

	term  goto 85
	var  goto 42
	input_context  goto 171


state 134
	input_stmt : EGG_IN LP input_context RP . SEMICOLON  (95)

	SEMICOLON  shift 172
	.  error


state 135
	output_context : term PLUS . output_context  (101)

	BOOL_STMT  shift 87
	STRING_STMT  shift 88
	INT_STMT  shift 89
	DOUBLE_STMT  shift 90
	CHAR_STMT  shift 91
	IDENTIFIER  shift 20
	.  error

	term  goto 92
	var  goto 42
	assignment_values  goto 93
	output_context  goto 173


state 136
	output_context : assignment_values PLUS . output_context  (102)

	BOOL_STMT  shift 87
	STRING_STMT  shift 88
	INT_STMT  shift 89
	DOUBLE_STMT  shift 90
	CHAR_STMT  shift 91
	IDENTIFIER  shift 20
	.  error

	term  goto 92
	var  goto 42
	assignment_values  goto 93
	output_context  goto 174


state 137
	output_stmt : EGG_OUT LP output_context RP . SEMICOLON  (96)

	SEMICOLON  shift 175
	.  error


state 138
	single_expression : NOT BOOL_STMT .  (34)

	.  reduce 34


state 139
	matched_stmt : IF LP logical_expression RP . LCB matched_stmt RCB ELSE LCB matched_stmt RCB  (7)
	unmatched_stmt : IF LP logical_expression RP . LCB stmts RCB  (9)
	unmatched_stmt : IF LP logical_expression RP . LCB matched_stmt RCB ELSE LCB unmatched_stmt RCB  (10)

	LCB  shift 176
	.  error


state 140
	logical_connector : AND .  (39)

	.  reduce 39


state 141
	logical_connector : OR .  (40)

	.  reduce 40


state 142
	recursive_expression : recursive_expression logical_connector . single_expression  (35)

	NOT  shift 95
	BOOL_STMT  shift 96
	IDENTIFIER  shift 20
	.  error

	single_expression  goto 177
	term  goto 100
	var  goto 42


state 143
	logical_operator : NOT .  (43)

	.  reduce 43


state 144
	logical_operator : IS_EQUAL_OP .  (41)

	.  reduce 41


state 145
	logical_operator : NOT_EQUAL_OP .  (42)

	.  reduce 42


state 146
	logical_operator : GT .  (44)

	.  reduce 44


state 147
	logical_operator : LT .  (45)

	.  reduce 45


state 148
	logical_operator : LTE .  (47)

	.  reduce 47


state 149
	logical_operator : GTE .  (46)

	.  reduce 46


state 150
	single_expression : term logical_operator . term  (32)

	IDENTIFIER  shift 20
	.  error

	term  goto 178
	var  goto 42


state 151
	for_loop : FOR LP loop_initialization logical_expression . SEMICOLON arithmetic_operations RP LCB stmts RCB  (27)

	SEMICOLON  shift 179
	.  error


state 152
	declaration_and_initialization : types term . assignment_operator assignment_values SEMICOLON  (82)

	ASSIGN_OP  shift 69
	DIVIDE_ASSIGN_OP  shift 70
	MULTIPLY_ASSIGN_OP  shift 71
	MOD_ASSIGN_OP  shift 72
	PLUS_ASSIGN_OP  shift 73
	MINUS_ASSIGN_OP  shift 74
	.  error

	assignment_operator  goto 129


state 153
	declaration_and_initialization : types constant_identifier . assignment_operator assignment_values SEMICOLON  (83)

	ASSIGN_OP  shift 69
	DIVIDE_ASSIGN_OP  shift 70
	MULTIPLY_ASSIGN_OP  shift 71
	MOD_ASSIGN_OP  shift 72
	PLUS_ASSIGN_OP  shift 73
	MINUS_ASSIGN_OP  shift 74
	.  error

	assignment_operator  goto 131


state 154
	while_loop : WHILE LP logical_expression RP . LCB stmts RCB  (26)

	LCB  shift 180
	.  error


state 155
	do_while_loop : DO LCB stmts RCB . WHILE LP logical_expression RP SEMICOLON  (28)

	WHILE  shift 181
	.  error


state 156
	parameter : types . IDENTIFIER  (107)

	IDENTIFIER  shift 182
	.  error


state 157
	function_declaration : VOID IDENTIFIER LP parameter . RP LCB stmts RCB  (103)
	function_declaration : VOID IDENTIFIER LP parameter . RP LCB stmts RETURN VOID SEMICOLON RCB  (105)
	parameter : parameter . COMMA types IDENTIFIER  (106)

	RP  shift 183
	COMMA  shift 184
	.  error


state 158
	power : POW LP INT_STMT COMMA . INT_STMT RP  (60)
	power : POW LP INT_STMT COMMA . DOUBLE_STMT RP  (61)

	INT_STMT  shift 185
	DOUBLE_STMT  shift 186
	.  error


state 159
	power : POW LP DOUBLE_STMT COMMA . INT_STMT RP  (62)
	power : POW LP DOUBLE_STMT COMMA . DOUBLE_STMT RP  (63)

	INT_STMT  shift 187
	DOUBLE_STMT  shift 188
	.  error


state 160
	max : MAX LP INT_STMT COMMA . INT_STMT RP  (67)

	INT_STMT  shift 189
	.  error


state 161
	max : MAX LP DOUBLE_STMT COMMA . DOUBLE_STMT RP  (68)

	DOUBLE_STMT  shift 190
	.  error


state 162
	min : MIN LP INT_STMT COMMA . INT_STMT RP  (69)

	INT_STMT  shift 191
	.  error


state 163
	min : MIN LP DOUBLE_STMT RP . COMMA DOUBLE_STMT RP  (70)

	COMMA  shift 192
	.  error


state 164
	sqrt : SQUARE_ROOT LP INT_STMT RP .  (71)

	.  reduce 71


state 165
	sqrt : SQUARE_ROOT LP DOUBLE_STMT RP .  (72)

	.  reduce 72


state 166
	initialization : term assignment_operator assignment_values SEMICOLON .  (81)

	.  reduce 81


state 167
	function_declaration : types IDENTIFIER LP parameter . RP LCB stmts RETURN assignment_values SEMICOLON RCB  (104)
	parameter : parameter . COMMA types IDENTIFIER  (106)

	RP  shift 193
	COMMA  shift 184
	.  error


state 168
	declaration_and_initialization : types term assignment_operator assignment_values . SEMICOLON  (82)

	SEMICOLON  shift 194
	.  error


state 169
	declaration_and_initialization : types constant_identifier assignment_operator assignment_values . SEMICOLON  (83)

	SEMICOLON  shift 195
	.  error


state 170
	function_call : CALL IDENTIFIER LP IDENTIFIER RP . SEMICOLON  (80)

	SEMICOLON  shift 196
	.  error


state 171
	input_context : term PLUS input_context .  (97)

	.  reduce 97


state 172
	input_stmt : EGG_IN LP input_context RP SEMICOLON .  (95)

	.  reduce 95


state 173
	output_context : term PLUS output_context .  (101)

	.  reduce 101


state 174
	output_context : assignment_values PLUS output_context .  (102)

	.  reduce 102


state 175
	output_stmt : EGG_OUT LP output_context RP SEMICOLON .  (96)

	.  reduce 96


state 176
	matched_stmt : IF LP logical_expression RP LCB . matched_stmt RCB ELSE LCB matched_stmt RCB  (7)
	unmatched_stmt : IF LP logical_expression RP LCB . stmts RCB  (9)
	unmatched_stmt : IF LP logical_expression RP LCB . matched_stmt RCB ELSE LCB unmatched_stmt RCB  (10)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	RCB  reduce 11
	NEW_LINE  reduce 11

	stmts  goto 197
	stmt  goto 25
	matched_stmt  goto 198
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 177
	recursive_expression : recursive_expression logical_connector single_expression .  (35)

	.  reduce 35


state 178
	single_expression : term logical_operator term .  (32)

	.  reduce 32


state 179
	for_loop : FOR LP loop_initialization logical_expression SEMICOLON . arithmetic_operations RP LCB stmts RCB  (27)

	LP  shift 2
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	.  error

	arithmetic_operations  goto 199
	term  goto 118
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49


state 180
	while_loop : WHILE LP logical_expression RP LCB . stmts RCB  (26)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmts  goto 200
	stmt  goto 25
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 181
	do_while_loop : DO LCB stmts RCB WHILE . LP logical_expression RP SEMICOLON  (28)

	LP  shift 201
	.  error


state 182
	parameter : types IDENTIFIER .  (107)

	.  reduce 107


state 183
	function_declaration : VOID IDENTIFIER LP parameter RP . LCB stmts RCB  (103)
	function_declaration : VOID IDENTIFIER LP parameter RP . LCB stmts RETURN VOID SEMICOLON RCB  (105)

	LCB  shift 202
	.  error


state 184
	parameter : parameter COMMA . types IDENTIFIER  (106)

	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	.  error

	types  goto 203


state 185
	power : POW LP INT_STMT COMMA INT_STMT . RP  (60)

	RP  shift 204
	.  error


state 186
	power : POW LP INT_STMT COMMA DOUBLE_STMT . RP  (61)

	RP  shift 205
	.  error


state 187
	power : POW LP DOUBLE_STMT COMMA INT_STMT . RP  (62)

	RP  shift 206
	.  error


state 188
	power : POW LP DOUBLE_STMT COMMA DOUBLE_STMT . RP  (63)

	RP  shift 207
	.  error


state 189
	max : MAX LP INT_STMT COMMA INT_STMT . RP  (67)

	RP  shift 208
	.  error


state 190
	max : MAX LP DOUBLE_STMT COMMA DOUBLE_STMT . RP  (68)

	RP  shift 209
	.  error


state 191
	min : MIN LP INT_STMT COMMA INT_STMT . RP  (69)

	RP  shift 210
	.  error


state 192
	min : MIN LP DOUBLE_STMT RP COMMA . DOUBLE_STMT RP  (70)

	DOUBLE_STMT  shift 211
	.  error


state 193
	function_declaration : types IDENTIFIER LP parameter RP . LCB stmts RETURN assignment_values SEMICOLON RCB  (104)

	LCB  shift 212
	.  error


state 194
	declaration_and_initialization : types term assignment_operator assignment_values SEMICOLON .  (82)

	.  reduce 82


state 195
	declaration_and_initialization : types constant_identifier assignment_operator assignment_values SEMICOLON .  (83)

	.  reduce 83


state 196
	function_call : CALL IDENTIFIER LP IDENTIFIER RP SEMICOLON .  (80)

	.  reduce 80


state 197
	stmts : stmts . stmt NEW_LINE  (4)
	unmatched_stmt : IF LP logical_expression RP LCB stmts . RCB  (9)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	RCB  shift 213
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmt  goto 64
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 198
	stmt : matched_stmt .  (5)
	matched_stmt : IF LP logical_expression RP LCB matched_stmt . RCB ELSE LCB matched_stmt RCB  (7)
	unmatched_stmt : IF LP logical_expression RP LCB matched_stmt . RCB ELSE LCB unmatched_stmt RCB  (10)

	RCB  shift 214
	NEW_LINE  reduce 5


state 199
	for_loop : FOR LP loop_initialization logical_expression SEMICOLON arithmetic_operations . RP LCB stmts RCB  (27)
	arithmetic_operations : arithmetic_operations . PLUS divisionAndMultiplication  (48)
	arithmetic_operations : arithmetic_operations . MINUS divisionAndMultiplication  (49)

	RP  shift 215
	PLUS  shift 67
	MINUS  shift 68
	.  error


state 200
	stmts : stmts . stmt NEW_LINE  (4)
	while_loop : WHILE LP logical_expression RP LCB stmts . RCB  (26)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	RCB  shift 216
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmt  goto 64
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 201
	do_while_loop : DO LCB stmts RCB WHILE LP . logical_expression RP SEMICOLON  (28)

	NOT  shift 95
	BOOL_STMT  shift 96
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 217
	recursive_expression  goto 98
	single_expression  goto 99
	term  goto 100
	var  goto 42


state 202
	function_declaration : VOID IDENTIFIER LP parameter RP LCB . stmts RCB  (103)
	function_declaration : VOID IDENTIFIER LP parameter RP LCB . stmts RETURN VOID SEMICOLON RCB  (105)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmts  goto 218
	stmt  goto 25
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 203
	parameter : parameter COMMA types . IDENTIFIER  (106)

	IDENTIFIER  shift 219
	.  error


state 204
	power : POW LP INT_STMT COMMA INT_STMT RP .  (60)

	.  reduce 60


state 205
	power : POW LP INT_STMT COMMA DOUBLE_STMT RP .  (61)

	.  reduce 61


state 206
	power : POW LP DOUBLE_STMT COMMA INT_STMT RP .  (62)

	.  reduce 62


state 207
	power : POW LP DOUBLE_STMT COMMA DOUBLE_STMT RP .  (63)

	.  reduce 63


state 208
	max : MAX LP INT_STMT COMMA INT_STMT RP .  (67)

	.  reduce 67


state 209
	max : MAX LP DOUBLE_STMT COMMA DOUBLE_STMT RP .  (68)

	.  reduce 68


state 210
	min : MIN LP INT_STMT COMMA INT_STMT RP .  (69)

	.  reduce 69


state 211
	min : MIN LP DOUBLE_STMT RP COMMA DOUBLE_STMT . RP  (70)

	RP  shift 220
	.  error


state 212
	function_declaration : types IDENTIFIER LP parameter RP LCB . stmts RETURN assignment_values SEMICOLON RCB  (104)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmts  goto 221
	stmt  goto 25
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 213
	unmatched_stmt : IF LP logical_expression RP LCB stmts RCB .  (9)

	.  reduce 9


state 214
	matched_stmt : IF LP logical_expression RP LCB matched_stmt RCB . ELSE LCB matched_stmt RCB  (7)
	unmatched_stmt : IF LP logical_expression RP LCB matched_stmt RCB . ELSE LCB unmatched_stmt RCB  (10)

	ELSE  shift 222
	.  error


state 215
	for_loop : FOR LP loop_initialization logical_expression SEMICOLON arithmetic_operations RP . LCB stmts RCB  (27)

	LCB  shift 223
	.  error


state 216
	while_loop : WHILE LP logical_expression RP LCB stmts RCB .  (26)

	.  reduce 26


state 217
	do_while_loop : DO LCB stmts RCB WHILE LP logical_expression . RP SEMICOLON  (28)

	RP  shift 224
	.  error


state 218
	stmts : stmts . stmt NEW_LINE  (4)
	function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts . RCB  (103)
	function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts . RETURN VOID SEMICOLON RCB  (105)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	RCB  shift 225
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	RETURN  shift 226
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmt  goto 64
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 219
	parameter : parameter COMMA types IDENTIFIER .  (106)

	.  reduce 106


state 220
	min : MIN LP DOUBLE_STMT RP COMMA DOUBLE_STMT RP .  (70)

	.  reduce 70


state 221
	stmts : stmts . stmt NEW_LINE  (4)
	function_declaration : types IDENTIFIER LP parameter RP LCB stmts . RETURN assignment_values SEMICOLON RCB  (104)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	RETURN  shift 227
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmt  goto 64
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 222
	matched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE . LCB matched_stmt RCB  (7)
	unmatched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE . LCB unmatched_stmt RCB  (10)

	LCB  shift 228
	.  error


state 223
	for_loop : FOR LP loop_initialization logical_expression SEMICOLON arithmetic_operations RP LCB . stmts RCB  (27)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmts  goto 229
	stmt  goto 25
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 224
	do_while_loop : DO LCB stmts RCB WHILE LP logical_expression RP . SEMICOLON  (28)

	SEMICOLON  shift 230
	.  error


state 225
	function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts RCB .  (103)

	.  reduce 103


state 226
	function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts RETURN . VOID SEMICOLON RCB  (105)

	VOID  shift 231
	.  error


state 227
	function_declaration : types IDENTIFIER LP parameter RP LCB stmts RETURN . assignment_values SEMICOLON RCB  (104)

	BOOL_STMT  shift 87
	STRING_STMT  shift 88
	INT_STMT  shift 89
	DOUBLE_STMT  shift 90
	CHAR_STMT  shift 91
	.  error

	assignment_values  goto 232


state 228
	matched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB . matched_stmt RCB  (7)
	unmatched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB . unmatched_stmt RCB  (10)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	RCB  reduce 11

	matched_stmt  goto 233
	unmatched_stmt  goto 234
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 229
	stmts : stmts . stmt NEW_LINE  (4)
	for_loop : FOR LP loop_initialization logical_expression SEMICOLON arithmetic_operations RP LCB stmts . RCB  (27)
	non_if_stmt : .  (11)

	CALL  shift 1
	LP  shift 2
	RCB  shift 235
	EGG_IN  shift 4
	EGG_OUT  shift 5
	INT  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	CHAR  shift 9
	BOOL  shift 10
	IF  shift 11
	FOR  shift 12
	WHILE  shift 13
	DO  shift 14
	VOID  shift 15
	POW  shift 16
	MAX  shift 17
	MIN  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	NEW_LINE  reduce 11

	stmt  goto 64
	matched_stmt  goto 26
	unmatched_stmt  goto 27
	non_if_stmt  goto 28
	loops  goto 29
	arithmetic_operations  goto 30
	function_call  goto 31
	function_declaration  goto 32
	declaration  goto 33
	initialization  goto 34
	declaration_and_initialization  goto 35
	input_stmt  goto 36
	output_stmt  goto 37
	while_loop  goto 38
	for_loop  goto 39
	do_while_loop  goto 40
	term  goto 41
	var  goto 42
	divisionAndMultiplication  goto 43
	modulo  goto 44
	sqrt  goto 45
	power  goto 46
	max  goto 47
	min  goto 48
	factor  goto 49
	types  goto 50


state 230
	do_while_loop : DO LCB stmts RCB WHILE LP logical_expression RP SEMICOLON .  (28)

	.  reduce 28


state 231
	function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts RETURN VOID . SEMICOLON RCB  (105)

	SEMICOLON  shift 236
	.  error


state 232
	function_declaration : types IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values . SEMICOLON RCB  (104)

	SEMICOLON  shift 237
	.  error


state 233
	matched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB matched_stmt . RCB  (7)

	RCB  shift 238
	.  error


state 234
	unmatched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB unmatched_stmt . RCB  (10)

	RCB  shift 239
	.  error


state 235
	for_loop : FOR LP loop_initialization logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB .  (27)

	.  reduce 27


state 236
	function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts RETURN VOID SEMICOLON . RCB  (105)

	RCB  shift 240
	.  error


state 237
	function_declaration : types IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values SEMICOLON . RCB  (104)

	RCB  shift 241
	.  error


state 238
	matched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB matched_stmt RCB .  (7)

	.  reduce 7


state 239
	unmatched_stmt : IF LP logical_expression RP LCB matched_stmt RCB ELSE LCB unmatched_stmt RCB .  (10)

	.  reduce 10


state 240
	function_declaration : VOID IDENTIFIER LP parameter RP LCB stmts RETURN VOID SEMICOLON RCB .  (105)

	.  reduce 105


state 241
	function_declaration : types IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values SEMICOLON RCB .  (104)

	.  reduce 104


State 0 contains 1 shift/reduce conflict.


71 terminals, 41 nonterminals
108 grammar rules, 242 states
