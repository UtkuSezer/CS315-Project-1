   0  $accept : program $end

   1  program : BEGIN stmts END

   2  stmts : stmt
   3        | stmt stmts

   4  stmt : matched_stmt SEMICOLON
   5       | unmatched_stmt SEMICOLON
   6       | non_if_stmt SEMICOLON

   7  matched_stmt : IF LP logical_expression RP stmts
   8               | ELIF LP logical_expression RP stmts
   9               | non_if_stmt

  10  unmatched_stmt : IF LP logical_expression RP stmts
  11                 | ELIF LP logical_expression RP stmts
  12                 | IF LP logical_expression RP matched_stmt ELSE LP unmatched_stmt RP

  13  non_if_stmt : loops non_if_stmt
  14              | arithmetic_operations non_if_stmt
  15              | function_call non_if_stmt
  16              | function_declaration non_if_stmt
  17              | declaration non_if_stmt
  18              | initialization non_if_stmt
  19              | declaration_and_initilization non_if_stmt
  20              | input_stmt non_if_stmt
  21              | output_stmt non_if_stmt
  22              | COMMENT non_if_stmt
  23              | LINE_COMMENT non_if_stmt
  24              | loops
  25              | arithmetic_operations
  26              | function_call
  27              | function_declaration
  28              | declaration
  29              | initialization
  30              | declaration_and_initilization
  31              | input_stmt
  32              | output_stmt
  33              | COMMENT
  34              | LINE_COMMENT

  35  loops : while_loop
  36        | for_loop
  37        | do_while_loop

  38  while_loop : WHILE LP logical_expression RP LCB stmts RCB

  39  for_loop : FOR LP loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB

  40  do_while_loop : DO LCB stmts RCB WHILE LP logical_expression RP SEMICOLON

  41  loop_initialization : initialization
  42                      | declaration_and_initilization

  43  logical_expression : single_expression
  44                     | recursive_expression

  45  single_expression : term logical_operator term
  46                    | BOOL_STMT
  47                    | NOT BOOL_STMT

  48  recursive_expression : recursive_expression logical_connector single_expression
  49                       | single_expression

  50  term : var

  51  var : IDENTIFIER

  52  logical_connector : AND
  53                    | OR

  54  logical_operator : IS_EQUAL_OP
  55                   | NOT_EQUAL_OP
  56                   | NOT
  57                   | GT
  58                   | LT
  59                   | GTE
  60                   | LTE

  61  arithmetic_operations : addition
  62                        | subtraction
  63                        | division
  64                        | multiplication
  65                        | modulo
  66                        | power
  67                        | sqrt

  68  addition : addition PLUS term
  69           | term
  70           | LP addition RP

  71  subtraction : subtraction MINUS term
  72              | term
  73              | LP subtraction RP

  74  division : division DIVIDE_OP factor
  75           | factor
  76           | LP division RP

  77  multiplication : multiplication MULTIPLY_OP factor
  78                 | factor
  79                 | LP multiplication RP

  80  modulo : factor MOD_OP factor

  81  power : POW LP INT_STMT COMMA INT_STMT RP
  82        | POW LP INT_STMT COMMA DOUBLE_STMT RP
  83        | POW LP DOUBLE_STMT COMMA INT_STMT RP
  84        | POW LP DOUBLE_STMT COMMA DOUBLE_STMT RP

  85  constant_identifier : CONST term

  86  sign : PLUS
  87       | MINUS

  88  factor : term

  89  max : MAX LP INT_STMT COMMA INT_STMT RP
  90      | MAX LP DOUBLE_STMT COMMA DOUBLE_STMT RP

  91  min : MIN LP INT_STMT COMMA INT_STMT RP
  92      | MIN LP DOUBLE_STMT RP COMMA DOUBLE_STMT RP

  93  sqrt : SQUARE_ROOT LP INT_STMT RP
  94       | SQUARE_ROOT LP DOUBLE_STMT RP

  95  declaration : types term SEMICOLON
  96              | types constant_identifier SEMICOLON

  97  types : INT
  98        | DOUBLE
  99        | STRING
 100        | CHAR
 101        | BOOL

 102  function_call : CALL IDENTIFIER LP IDENTIFIER RP SEMICOLON

 103  function_types : types
 104                 | VOID

 105  initialization : term assignment_operator assignment_values SEMICOLON

 106  declaration_and_initilization : types term assignment_operator assignment_values SEMICOLON
 107                                | types constant_identifier SEMICOLON

 108  assignment_operator : ASSIGN_OP
 109                      | DIVIDE_ASSIGN_OP
 110                      | MULTIPLY_ASSIGN_OP
 111                      | MOD_ASSIGN_OP
 112                      | PLUS_ASSIGN_OP
 113                      | MINUS_ASSIGN_OP

 114  assignment_values : BOOL_STMT
 115                    | INT_STMT
 116                    | STRING_STMT
 117                    | DOUBLE_STMT
 118                    | CHAR_STMT

 119  input_stmt : EGG_IN LP input_context RP

 120  output_stmt : EGG_OUT LP output_context RP

 121  input_context : term PLUS input_context
 122                | term

 123  output_context : term
 124                 | assignment_values
 125                 | term PLUS output_context
 126                 | assignment_values PLUS output_context

 127  function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RCB
 128                       | function_types IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values RCB
 129                       | function_types IDENTIFIER LP parameter RP LCB stmts RETURN VOID RCB

 130  parameter : parameter COMMA types IDENTIFIER
 131            | types IDENTIFIER

state 0
	$accept : . program $end  (0)

	BEGIN  shift 1
	.  error

	program  goto 2


state 1
	program : BEGIN . stmts END  (1)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 23
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	function_call : CALL . IDENTIFIER LP IDENTIFIER RP SEMICOLON  (102)

	IDENTIFIER  shift 52
	.  error


state 4
	addition : LP . addition RP  (70)
	subtraction : LP . subtraction RP  (73)
	division : LP . division RP  (76)
	multiplication : LP . multiplication RP  (79)

	LP  shift 4
	IDENTIFIER  shift 20
	.  error

	term  goto 53
	var  goto 41
	addition  goto 54
	subtraction  goto 55
	division  goto 56
	multiplication  goto 57
	factor  goto 58


state 5
	input_stmt : EGG_IN . LP input_context RP  (119)

	LP  shift 59
	.  error


state 6
	output_stmt : EGG_OUT . LP output_context RP  (120)

	LP  shift 60
	.  error


state 7
	types : INT .  (97)

	.  reduce 97


state 8
	types : DOUBLE .  (98)

	.  reduce 98


state 9
	types : STRING .  (99)

	.  reduce 99


state 10
	types : CHAR .  (100)

	.  reduce 100


state 11
	types : BOOL .  (101)

	.  reduce 101


state 12
	matched_stmt : IF . LP logical_expression RP stmts  (7)
	unmatched_stmt : IF . LP logical_expression RP stmts  (10)
	unmatched_stmt : IF . LP logical_expression RP matched_stmt ELSE LP unmatched_stmt RP  (12)

	LP  shift 61
	.  error


state 13
	matched_stmt : ELIF . LP logical_expression RP stmts  (8)
	unmatched_stmt : ELIF . LP logical_expression RP stmts  (11)

	LP  shift 62
	.  error


state 14
	for_loop : FOR . LP loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB  (39)

	LP  shift 63
	.  error


state 15
	while_loop : WHILE . LP logical_expression RP LCB stmts RCB  (38)

	LP  shift 64
	.  error


state 16
	do_while_loop : DO . LCB stmts RCB WHILE LP logical_expression RP SEMICOLON  (40)

	LCB  shift 65
	.  error


state 17
	function_types : VOID .  (104)

	.  reduce 104


state 18
	power : POW . LP INT_STMT COMMA INT_STMT RP  (81)
	power : POW . LP INT_STMT COMMA DOUBLE_STMT RP  (82)
	power : POW . LP DOUBLE_STMT COMMA INT_STMT RP  (83)
	power : POW . LP DOUBLE_STMT COMMA DOUBLE_STMT RP  (84)

	LP  shift 66
	.  error


state 19
	sqrt : SQUARE_ROOT . LP INT_STMT RP  (93)
	sqrt : SQUARE_ROOT . LP DOUBLE_STMT RP  (94)

	LP  shift 67
	.  error


state 20
	var : IDENTIFIER .  (51)

	.  reduce 51


state 21
	non_if_stmt : COMMENT . non_if_stmt  (22)
	non_if_stmt : COMMENT .  (33)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 33
	ELSE  reduce 33

	non_if_stmt  goto 68
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 22
	non_if_stmt : LINE_COMMENT . non_if_stmt  (23)
	non_if_stmt : LINE_COMMENT .  (34)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 34
	ELSE  reduce 34

	non_if_stmt  goto 69
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 23
	program : BEGIN stmts . END  (1)

	END  shift 70
	.  error


state 24
	stmts : stmt .  (2)
	stmts : stmt . stmts  (3)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	RP  reduce 2
	RCB  reduce 2
	SEMICOLON  reduce 2
	END  reduce 2
	ELSE  reduce 2
	RETURN  reduce 2

	stmts  goto 71
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 25
	stmt : matched_stmt . SEMICOLON  (4)

	SEMICOLON  shift 72
	.  error


state 26
	stmt : unmatched_stmt . SEMICOLON  (5)

	SEMICOLON  shift 73
	.  error


27: shift/reduce conflict (shift 74, reduce 9) on SEMICOLON
state 27
	stmt : non_if_stmt . SEMICOLON  (6)
	matched_stmt : non_if_stmt .  (9)

	SEMICOLON  shift 74
	ELSE  reduce 9


state 28
	non_if_stmt : loops . non_if_stmt  (13)
	non_if_stmt : loops .  (24)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 24
	ELSE  reduce 24

	non_if_stmt  goto 75
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 29
	non_if_stmt : arithmetic_operations . non_if_stmt  (14)
	non_if_stmt : arithmetic_operations .  (25)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 25
	ELSE  reduce 25

	non_if_stmt  goto 76
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 30
	non_if_stmt : function_call . non_if_stmt  (15)
	non_if_stmt : function_call .  (26)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 26
	ELSE  reduce 26

	non_if_stmt  goto 77
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 31
	non_if_stmt : function_declaration . non_if_stmt  (16)
	non_if_stmt : function_declaration .  (27)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 27
	ELSE  reduce 27

	non_if_stmt  goto 78
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 32
	non_if_stmt : declaration . non_if_stmt  (17)
	non_if_stmt : declaration .  (28)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 28
	ELSE  reduce 28

	non_if_stmt  goto 79
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 33
	non_if_stmt : initialization . non_if_stmt  (18)
	non_if_stmt : initialization .  (29)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 29
	ELSE  reduce 29

	non_if_stmt  goto 80
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 34
	non_if_stmt : declaration_and_initilization . non_if_stmt  (19)
	non_if_stmt : declaration_and_initilization .  (30)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 30
	ELSE  reduce 30

	non_if_stmt  goto 81
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 35
	non_if_stmt : input_stmt . non_if_stmt  (20)
	non_if_stmt : input_stmt .  (31)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 31
	ELSE  reduce 31

	non_if_stmt  goto 82
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 36
	non_if_stmt : output_stmt . non_if_stmt  (21)
	non_if_stmt : output_stmt .  (32)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	SEMICOLON  reduce 32
	ELSE  reduce 32

	non_if_stmt  goto 83
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 37
	loops : while_loop .  (35)

	.  reduce 35


state 38
	loops : for_loop .  (36)

	.  reduce 36


state 39
	loops : do_while_loop .  (37)

	.  reduce 37


40: reduce/reduce conflict (reduce 69, reduce 72) on CALL
40: reduce/reduce conflict (reduce 69, reduce 88) on CALL
40: reduce/reduce conflict (reduce 69, reduce 72) on LP
40: reduce/reduce conflict (reduce 69, reduce 88) on LP
40: reduce/reduce conflict (reduce 69, reduce 72) on SEMICOLON
40: reduce/reduce conflict (reduce 69, reduce 88) on SEMICOLON
40: reduce/reduce conflict (reduce 69, reduce 72) on EGG_IN
40: reduce/reduce conflict (reduce 69, reduce 88) on EGG_IN
40: reduce/reduce conflict (reduce 69, reduce 72) on EGG_OUT
40: reduce/reduce conflict (reduce 69, reduce 88) on EGG_OUT
40: reduce/reduce conflict (reduce 69, reduce 72) on INT
40: reduce/reduce conflict (reduce 69, reduce 88) on INT
40: reduce/reduce conflict (reduce 69, reduce 72) on DOUBLE
40: reduce/reduce conflict (reduce 69, reduce 88) on DOUBLE
40: reduce/reduce conflict (reduce 69, reduce 72) on STRING
40: reduce/reduce conflict (reduce 69, reduce 88) on STRING
40: reduce/reduce conflict (reduce 69, reduce 72) on CHAR
40: reduce/reduce conflict (reduce 69, reduce 88) on CHAR
40: reduce/reduce conflict (reduce 69, reduce 72) on BOOL
40: reduce/reduce conflict (reduce 69, reduce 88) on BOOL
40: reduce/reduce conflict (reduce 69, reduce 72) on ELSE
40: reduce/reduce conflict (reduce 69, reduce 88) on ELSE
40: reduce/reduce conflict (reduce 69, reduce 72) on FOR
40: reduce/reduce conflict (reduce 69, reduce 88) on FOR
40: reduce/reduce conflict (reduce 69, reduce 72) on WHILE
40: reduce/reduce conflict (reduce 69, reduce 88) on WHILE
40: reduce/reduce conflict (reduce 69, reduce 72) on DO
40: reduce/reduce conflict (reduce 69, reduce 88) on DO
40: reduce/reduce conflict (reduce 69, reduce 72) on VOID
40: reduce/reduce conflict (reduce 69, reduce 88) on VOID
40: reduce/reduce conflict (reduce 69, reduce 72) on POW
40: reduce/reduce conflict (reduce 69, reduce 88) on POW
40: reduce/reduce conflict (reduce 69, reduce 72) on SQUARE_ROOT
40: reduce/reduce conflict (reduce 69, reduce 88) on SQUARE_ROOT
40: reduce/reduce conflict (reduce 69, reduce 72) on IDENTIFIER
40: reduce/reduce conflict (reduce 69, reduce 88) on IDENTIFIER
40: reduce/reduce conflict (reduce 69, reduce 72) on COMMENT
40: reduce/reduce conflict (reduce 69, reduce 88) on COMMENT
40: reduce/reduce conflict (reduce 69, reduce 72) on LINE_COMMENT
40: reduce/reduce conflict (reduce 69, reduce 88) on LINE_COMMENT
state 40
	addition : term .  (69)
	subtraction : term .  (72)
	factor : term .  (88)
	initialization : term . assignment_operator assignment_values SEMICOLON  (105)

	ASSIGN_OP  shift 84
	DIVIDE_ASSIGN_OP  shift 85
	MULTIPLY_ASSIGN_OP  shift 86
	MOD_ASSIGN_OP  shift 87
	PLUS_ASSIGN_OP  shift 88
	MINUS_ASSIGN_OP  shift 89
	CALL  reduce 69
	LP  reduce 69
	SEMICOLON  reduce 69
	PLUS  reduce 69
	MINUS  reduce 72
	MULTIPLY_OP  reduce 88
	DIVIDE_OP  reduce 88
	MOD_OP  reduce 88
	EGG_IN  reduce 69
	EGG_OUT  reduce 69
	INT  reduce 69
	DOUBLE  reduce 69
	STRING  reduce 69
	CHAR  reduce 69
	BOOL  reduce 69
	ELSE  reduce 69
	FOR  reduce 69
	WHILE  reduce 69
	DO  reduce 69
	VOID  reduce 69
	POW  reduce 69
	SQUARE_ROOT  reduce 69
	IDENTIFIER  reduce 69
	COMMENT  reduce 69
	LINE_COMMENT  reduce 69

	assignment_operator  goto 90


state 41
	term : var .  (50)

	.  reduce 50


state 42
	arithmetic_operations : addition .  (61)
	addition : addition . PLUS term  (68)

	PLUS  shift 91
	CALL  reduce 61
	LP  reduce 61
	RP  reduce 61
	SEMICOLON  reduce 61
	EGG_IN  reduce 61
	EGG_OUT  reduce 61
	INT  reduce 61
	DOUBLE  reduce 61
	STRING  reduce 61
	CHAR  reduce 61
	BOOL  reduce 61
	ELSE  reduce 61
	FOR  reduce 61
	WHILE  reduce 61
	DO  reduce 61
	VOID  reduce 61
	POW  reduce 61
	SQUARE_ROOT  reduce 61
	IDENTIFIER  reduce 61
	COMMENT  reduce 61
	LINE_COMMENT  reduce 61


state 43
	arithmetic_operations : subtraction .  (62)
	subtraction : subtraction . MINUS term  (71)

	MINUS  shift 92
	CALL  reduce 62
	LP  reduce 62
	RP  reduce 62
	SEMICOLON  reduce 62
	EGG_IN  reduce 62
	EGG_OUT  reduce 62
	INT  reduce 62
	DOUBLE  reduce 62
	STRING  reduce 62
	CHAR  reduce 62
	BOOL  reduce 62
	ELSE  reduce 62
	FOR  reduce 62
	WHILE  reduce 62
	DO  reduce 62
	VOID  reduce 62
	POW  reduce 62
	SQUARE_ROOT  reduce 62
	IDENTIFIER  reduce 62
	COMMENT  reduce 62
	LINE_COMMENT  reduce 62


state 44
	arithmetic_operations : division .  (63)
	division : division . DIVIDE_OP factor  (74)

	DIVIDE_OP  shift 93
	CALL  reduce 63
	LP  reduce 63
	RP  reduce 63
	SEMICOLON  reduce 63
	EGG_IN  reduce 63
	EGG_OUT  reduce 63
	INT  reduce 63
	DOUBLE  reduce 63
	STRING  reduce 63
	CHAR  reduce 63
	BOOL  reduce 63
	ELSE  reduce 63
	FOR  reduce 63
	WHILE  reduce 63
	DO  reduce 63
	VOID  reduce 63
	POW  reduce 63
	SQUARE_ROOT  reduce 63
	IDENTIFIER  reduce 63
	COMMENT  reduce 63
	LINE_COMMENT  reduce 63


state 45
	arithmetic_operations : multiplication .  (64)
	multiplication : multiplication . MULTIPLY_OP factor  (77)

	MULTIPLY_OP  shift 94
	CALL  reduce 64
	LP  reduce 64
	RP  reduce 64
	SEMICOLON  reduce 64
	EGG_IN  reduce 64
	EGG_OUT  reduce 64
	INT  reduce 64
	DOUBLE  reduce 64
	STRING  reduce 64
	CHAR  reduce 64
	BOOL  reduce 64
	ELSE  reduce 64
	FOR  reduce 64
	WHILE  reduce 64
	DO  reduce 64
	VOID  reduce 64
	POW  reduce 64
	SQUARE_ROOT  reduce 64
	IDENTIFIER  reduce 64
	COMMENT  reduce 64
	LINE_COMMENT  reduce 64


state 46
	arithmetic_operations : modulo .  (65)

	.  reduce 65


state 47
	arithmetic_operations : power .  (66)

	.  reduce 66


state 48
	arithmetic_operations : sqrt .  (67)

	.  reduce 67


49: reduce/reduce conflict (reduce 75, reduce 78) on CALL
49: reduce/reduce conflict (reduce 75, reduce 78) on LP
49: reduce/reduce conflict (reduce 75, reduce 78) on RP
49: reduce/reduce conflict (reduce 75, reduce 78) on SEMICOLON
49: reduce/reduce conflict (reduce 75, reduce 78) on EGG_IN
49: reduce/reduce conflict (reduce 75, reduce 78) on EGG_OUT
49: reduce/reduce conflict (reduce 75, reduce 78) on INT
49: reduce/reduce conflict (reduce 75, reduce 78) on DOUBLE
49: reduce/reduce conflict (reduce 75, reduce 78) on STRING
49: reduce/reduce conflict (reduce 75, reduce 78) on CHAR
49: reduce/reduce conflict (reduce 75, reduce 78) on BOOL
49: reduce/reduce conflict (reduce 75, reduce 78) on ELSE
49: reduce/reduce conflict (reduce 75, reduce 78) on FOR
49: reduce/reduce conflict (reduce 75, reduce 78) on WHILE
49: reduce/reduce conflict (reduce 75, reduce 78) on DO
49: reduce/reduce conflict (reduce 75, reduce 78) on VOID
49: reduce/reduce conflict (reduce 75, reduce 78) on POW
49: reduce/reduce conflict (reduce 75, reduce 78) on SQUARE_ROOT
49: reduce/reduce conflict (reduce 75, reduce 78) on IDENTIFIER
49: reduce/reduce conflict (reduce 75, reduce 78) on COMMENT
49: reduce/reduce conflict (reduce 75, reduce 78) on LINE_COMMENT
state 49
	division : factor .  (75)
	multiplication : factor .  (78)
	modulo : factor . MOD_OP factor  (80)

	MOD_OP  shift 95
	CALL  reduce 75
	LP  reduce 75
	RP  reduce 75
	SEMICOLON  reduce 75
	MULTIPLY_OP  reduce 78
	DIVIDE_OP  reduce 75
	EGG_IN  reduce 75
	EGG_OUT  reduce 75
	INT  reduce 75
	DOUBLE  reduce 75
	STRING  reduce 75
	CHAR  reduce 75
	BOOL  reduce 75
	ELSE  reduce 75
	FOR  reduce 75
	WHILE  reduce 75
	DO  reduce 75
	VOID  reduce 75
	POW  reduce 75
	SQUARE_ROOT  reduce 75
	IDENTIFIER  reduce 75
	COMMENT  reduce 75
	LINE_COMMENT  reduce 75


50: shift/reduce conflict (shift 20, reduce 103) on IDENTIFIER
state 50
	declaration : types . term SEMICOLON  (95)
	declaration : types . constant_identifier SEMICOLON  (96)
	function_types : types .  (103)
	declaration_and_initilization : types . term assignment_operator assignment_values SEMICOLON  (106)
	declaration_and_initilization : types . constant_identifier SEMICOLON  (107)

	CONST  shift 96
	IDENTIFIER  shift 20

	term  goto 97
	var  goto 41
	constant_identifier  goto 98


state 51
	function_declaration : function_types . IDENTIFIER LP parameter RP LCB stmts RCB  (127)
	function_declaration : function_types . IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values RCB  (128)
	function_declaration : function_types . IDENTIFIER LP parameter RP LCB stmts RETURN VOID RCB  (129)

	IDENTIFIER  shift 99
	.  error


state 52
	function_call : CALL IDENTIFIER . LP IDENTIFIER RP SEMICOLON  (102)

	LP  shift 100
	.  error


53: reduce/reduce conflict (reduce 69, reduce 72) on RP
53: reduce/reduce conflict (reduce 69, reduce 88) on RP
state 53
	addition : term .  (69)
	subtraction : term .  (72)
	factor : term .  (88)

	RP  reduce 69
	PLUS  reduce 69
	MINUS  reduce 72
	MULTIPLY_OP  reduce 88
	DIVIDE_OP  reduce 88
	MOD_OP  reduce 88


state 54
	addition : addition . PLUS term  (68)
	addition : LP addition . RP  (70)

	RP  shift 101
	PLUS  shift 91
	.  error


state 55
	subtraction : subtraction . MINUS term  (71)
	subtraction : LP subtraction . RP  (73)

	RP  shift 102
	MINUS  shift 92
	.  error


state 56
	division : division . DIVIDE_OP factor  (74)
	division : LP division . RP  (76)

	RP  shift 103
	DIVIDE_OP  shift 93
	.  error


state 57
	multiplication : multiplication . MULTIPLY_OP factor  (77)
	multiplication : LP multiplication . RP  (79)

	RP  shift 104
	MULTIPLY_OP  shift 94
	.  error


58: reduce/reduce conflict (reduce 75, reduce 78) on RP
state 58
	division : factor .  (75)
	multiplication : factor .  (78)

	RP  reduce 75
	MULTIPLY_OP  reduce 78
	DIVIDE_OP  reduce 75


state 59
	input_stmt : EGG_IN LP . input_context RP  (119)

	IDENTIFIER  shift 20
	.  error

	term  goto 105
	var  goto 41
	input_context  goto 106


state 60
	output_stmt : EGG_OUT LP . output_context RP  (120)

	BOOL_STMT  shift 107
	STRING_STMT  shift 108
	INT_STMT  shift 109
	DOUBLE_STMT  shift 110
	CHAR_STMT  shift 111
	IDENTIFIER  shift 20
	.  error

	term  goto 112
	var  goto 41
	assignment_values  goto 113
	output_context  goto 114


state 61
	matched_stmt : IF LP . logical_expression RP stmts  (7)
	unmatched_stmt : IF LP . logical_expression RP stmts  (10)
	unmatched_stmt : IF LP . logical_expression RP matched_stmt ELSE LP unmatched_stmt RP  (12)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 117
	single_expression  goto 118
	recursive_expression  goto 119
	term  goto 120
	var  goto 41


state 62
	matched_stmt : ELIF LP . logical_expression RP stmts  (8)
	unmatched_stmt : ELIF LP . logical_expression RP stmts  (11)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 121
	single_expression  goto 118
	recursive_expression  goto 119
	term  goto 120
	var  goto 41


state 63
	for_loop : FOR LP . loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB  (39)

	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IDENTIFIER  shift 20
	.  error

	initialization  goto 122
	declaration_and_initilization  goto 123
	loop_initialization  goto 124
	term  goto 125
	var  goto 41
	types  goto 126


state 64
	while_loop : WHILE LP . logical_expression RP LCB stmts RCB  (38)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 127
	single_expression  goto 118
	recursive_expression  goto 119
	term  goto 120
	var  goto 41


state 65
	do_while_loop : DO LCB . stmts RCB WHILE LP logical_expression RP SEMICOLON  (40)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 128
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 66
	power : POW LP . INT_STMT COMMA INT_STMT RP  (81)
	power : POW LP . INT_STMT COMMA DOUBLE_STMT RP  (82)
	power : POW LP . DOUBLE_STMT COMMA INT_STMT RP  (83)
	power : POW LP . DOUBLE_STMT COMMA DOUBLE_STMT RP  (84)

	INT_STMT  shift 129
	DOUBLE_STMT  shift 130
	.  error


state 67
	sqrt : SQUARE_ROOT LP . INT_STMT RP  (93)
	sqrt : SQUARE_ROOT LP . DOUBLE_STMT RP  (94)

	INT_STMT  shift 131
	DOUBLE_STMT  shift 132
	.  error


state 68
	non_if_stmt : COMMENT non_if_stmt .  (22)

	.  reduce 22


state 69
	non_if_stmt : LINE_COMMENT non_if_stmt .  (23)

	.  reduce 23


state 70
	program : BEGIN stmts END .  (1)

	.  reduce 1


state 71
	stmts : stmt stmts .  (3)

	.  reduce 3


state 72
	stmt : matched_stmt SEMICOLON .  (4)

	.  reduce 4


state 73
	stmt : unmatched_stmt SEMICOLON .  (5)

	.  reduce 5


state 74
	stmt : non_if_stmt SEMICOLON .  (6)

	.  reduce 6


state 75
	non_if_stmt : loops non_if_stmt .  (13)

	.  reduce 13


state 76
	non_if_stmt : arithmetic_operations non_if_stmt .  (14)

	.  reduce 14


state 77
	non_if_stmt : function_call non_if_stmt .  (15)

	.  reduce 15


state 78
	non_if_stmt : function_declaration non_if_stmt .  (16)

	.  reduce 16


state 79
	non_if_stmt : declaration non_if_stmt .  (17)

	.  reduce 17


state 80
	non_if_stmt : initialization non_if_stmt .  (18)

	.  reduce 18


state 81
	non_if_stmt : declaration_and_initilization non_if_stmt .  (19)

	.  reduce 19


state 82
	non_if_stmt : input_stmt non_if_stmt .  (20)

	.  reduce 20


state 83
	non_if_stmt : output_stmt non_if_stmt .  (21)

	.  reduce 21


state 84
	assignment_operator : ASSIGN_OP .  (108)

	.  reduce 108


state 85
	assignment_operator : DIVIDE_ASSIGN_OP .  (109)

	.  reduce 109


state 86
	assignment_operator : MULTIPLY_ASSIGN_OP .  (110)

	.  reduce 110


state 87
	assignment_operator : MOD_ASSIGN_OP .  (111)

	.  reduce 111


state 88
	assignment_operator : PLUS_ASSIGN_OP .  (112)

	.  reduce 112


state 89
	assignment_operator : MINUS_ASSIGN_OP .  (113)

	.  reduce 113


state 90
	initialization : term assignment_operator . assignment_values SEMICOLON  (105)

	BOOL_STMT  shift 107
	STRING_STMT  shift 108
	INT_STMT  shift 109
	DOUBLE_STMT  shift 110
	CHAR_STMT  shift 111
	.  error

	assignment_values  goto 133


state 91
	addition : addition PLUS . term  (68)

	IDENTIFIER  shift 20
	.  error

	term  goto 134
	var  goto 41


state 92
	subtraction : subtraction MINUS . term  (71)

	IDENTIFIER  shift 20
	.  error

	term  goto 135
	var  goto 41


state 93
	division : division DIVIDE_OP . factor  (74)

	IDENTIFIER  shift 20
	.  error

	term  goto 136
	var  goto 41
	factor  goto 137


state 94
	multiplication : multiplication MULTIPLY_OP . factor  (77)

	IDENTIFIER  shift 20
	.  error

	term  goto 136
	var  goto 41
	factor  goto 138


state 95
	modulo : factor MOD_OP . factor  (80)

	IDENTIFIER  shift 20
	.  error

	term  goto 136
	var  goto 41
	factor  goto 139


state 96
	constant_identifier : CONST . term  (85)

	IDENTIFIER  shift 20
	.  error

	term  goto 140
	var  goto 41


state 97
	declaration : types term . SEMICOLON  (95)
	declaration_and_initilization : types term . assignment_operator assignment_values SEMICOLON  (106)

	SEMICOLON  shift 141
	ASSIGN_OP  shift 84
	DIVIDE_ASSIGN_OP  shift 85
	MULTIPLY_ASSIGN_OP  shift 86
	MOD_ASSIGN_OP  shift 87
	PLUS_ASSIGN_OP  shift 88
	MINUS_ASSIGN_OP  shift 89
	.  error

	assignment_operator  goto 142


state 98
	declaration : types constant_identifier . SEMICOLON  (96)
	declaration_and_initilization : types constant_identifier . SEMICOLON  (107)

	SEMICOLON  shift 143
	.  error


state 99
	function_declaration : function_types IDENTIFIER . LP parameter RP LCB stmts RCB  (127)
	function_declaration : function_types IDENTIFIER . LP parameter RP LCB stmts RETURN assignment_values RCB  (128)
	function_declaration : function_types IDENTIFIER . LP parameter RP LCB stmts RETURN VOID RCB  (129)

	LP  shift 144
	.  error


state 100
	function_call : CALL IDENTIFIER LP . IDENTIFIER RP SEMICOLON  (102)

	IDENTIFIER  shift 145
	.  error


state 101
	addition : LP addition RP .  (70)

	.  reduce 70


state 102
	subtraction : LP subtraction RP .  (73)

	.  reduce 73


state 103
	division : LP division RP .  (76)

	.  reduce 76


state 104
	multiplication : LP multiplication RP .  (79)

	.  reduce 79


state 105
	input_context : term . PLUS input_context  (121)
	input_context : term .  (122)

	PLUS  shift 146
	RP  reduce 122


state 106
	input_stmt : EGG_IN LP input_context . RP  (119)

	RP  shift 147
	.  error


state 107
	assignment_values : BOOL_STMT .  (114)

	.  reduce 114


state 108
	assignment_values : STRING_STMT .  (116)

	.  reduce 116


state 109
	assignment_values : INT_STMT .  (115)

	.  reduce 115


state 110
	assignment_values : DOUBLE_STMT .  (117)

	.  reduce 117


state 111
	assignment_values : CHAR_STMT .  (118)

	.  reduce 118


state 112
	output_context : term .  (123)
	output_context : term . PLUS output_context  (125)

	PLUS  shift 148
	RP  reduce 123


state 113
	output_context : assignment_values .  (124)
	output_context : assignment_values . PLUS output_context  (126)

	PLUS  shift 149
	RP  reduce 124


state 114
	output_stmt : EGG_OUT LP output_context . RP  (120)

	RP  shift 150
	.  error


state 115
	single_expression : NOT . BOOL_STMT  (47)

	BOOL_STMT  shift 151
	.  error


state 116
	single_expression : BOOL_STMT .  (46)

	.  reduce 46


state 117
	matched_stmt : IF LP logical_expression . RP stmts  (7)
	unmatched_stmt : IF LP logical_expression . RP stmts  (10)
	unmatched_stmt : IF LP logical_expression . RP matched_stmt ELSE LP unmatched_stmt RP  (12)

	RP  shift 152
	.  error


118: reduce/reduce conflict (reduce 43, reduce 49) on RP
118: reduce/reduce conflict (reduce 43, reduce 49) on SEMICOLON
state 118
	logical_expression : single_expression .  (43)
	recursive_expression : single_expression .  (49)

	RP  reduce 43
	SEMICOLON  reduce 43
	AND  reduce 49
	OR  reduce 49


state 119
	logical_expression : recursive_expression .  (44)
	recursive_expression : recursive_expression . logical_connector single_expression  (48)

	AND  shift 153
	OR  shift 154
	RP  reduce 44
	SEMICOLON  reduce 44

	logical_connector  goto 155


state 120
	single_expression : term . logical_operator term  (45)

	NOT  shift 156
	IS_EQUAL_OP  shift 157
	NOT_EQUAL_OP  shift 158
	GT  shift 159
	LT  shift 160
	LTE  shift 161
	GTE  shift 162
	.  error

	logical_operator  goto 163


state 121
	matched_stmt : ELIF LP logical_expression . RP stmts  (8)
	unmatched_stmt : ELIF LP logical_expression . RP stmts  (11)

	RP  shift 164
	.  error


state 122
	loop_initialization : initialization .  (41)

	.  reduce 41


state 123
	loop_initialization : declaration_and_initilization .  (42)

	.  reduce 42


state 124
	for_loop : FOR LP loop_initialization . SEMICOLON logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB  (39)

	SEMICOLON  shift 165
	.  error


state 125
	initialization : term . assignment_operator assignment_values SEMICOLON  (105)

	ASSIGN_OP  shift 84
	DIVIDE_ASSIGN_OP  shift 85
	MULTIPLY_ASSIGN_OP  shift 86
	MOD_ASSIGN_OP  shift 87
	PLUS_ASSIGN_OP  shift 88
	MINUS_ASSIGN_OP  shift 89
	.  error

	assignment_operator  goto 90


state 126
	declaration_and_initilization : types . term assignment_operator assignment_values SEMICOLON  (106)
	declaration_and_initilization : types . constant_identifier SEMICOLON  (107)

	CONST  shift 96
	IDENTIFIER  shift 20
	.  error

	term  goto 166
	var  goto 41
	constant_identifier  goto 167


state 127
	while_loop : WHILE LP logical_expression . RP LCB stmts RCB  (38)

	RP  shift 168
	.  error


state 128
	do_while_loop : DO LCB stmts . RCB WHILE LP logical_expression RP SEMICOLON  (40)

	RCB  shift 169
	.  error


state 129
	power : POW LP INT_STMT . COMMA INT_STMT RP  (81)
	power : POW LP INT_STMT . COMMA DOUBLE_STMT RP  (82)

	COMMA  shift 170
	.  error


state 130
	power : POW LP DOUBLE_STMT . COMMA INT_STMT RP  (83)
	power : POW LP DOUBLE_STMT . COMMA DOUBLE_STMT RP  (84)

	COMMA  shift 171
	.  error


state 131
	sqrt : SQUARE_ROOT LP INT_STMT . RP  (93)

	RP  shift 172
	.  error


state 132
	sqrt : SQUARE_ROOT LP DOUBLE_STMT . RP  (94)

	RP  shift 173
	.  error


state 133
	initialization : term assignment_operator assignment_values . SEMICOLON  (105)

	SEMICOLON  shift 174
	.  error


state 134
	addition : addition PLUS term .  (68)

	.  reduce 68


state 135
	subtraction : subtraction MINUS term .  (71)

	.  reduce 71


state 136
	factor : term .  (88)

	.  reduce 88


state 137
	division : division DIVIDE_OP factor .  (74)

	.  reduce 74


state 138
	multiplication : multiplication MULTIPLY_OP factor .  (77)

	.  reduce 77


state 139
	modulo : factor MOD_OP factor .  (80)

	.  reduce 80


state 140
	constant_identifier : CONST term .  (85)

	.  reduce 85


state 141
	declaration : types term SEMICOLON .  (95)

	.  reduce 95


state 142
	declaration_and_initilization : types term assignment_operator . assignment_values SEMICOLON  (106)

	BOOL_STMT  shift 107
	STRING_STMT  shift 108
	INT_STMT  shift 109
	DOUBLE_STMT  shift 110
	CHAR_STMT  shift 111
	.  error

	assignment_values  goto 175


143: reduce/reduce conflict (reduce 96, reduce 107) on CALL
143: reduce/reduce conflict (reduce 96, reduce 107) on LP
143: reduce/reduce conflict (reduce 96, reduce 107) on SEMICOLON
143: reduce/reduce conflict (reduce 96, reduce 107) on EGG_IN
143: reduce/reduce conflict (reduce 96, reduce 107) on EGG_OUT
143: reduce/reduce conflict (reduce 96, reduce 107) on INT
143: reduce/reduce conflict (reduce 96, reduce 107) on DOUBLE
143: reduce/reduce conflict (reduce 96, reduce 107) on STRING
143: reduce/reduce conflict (reduce 96, reduce 107) on CHAR
143: reduce/reduce conflict (reduce 96, reduce 107) on BOOL
143: reduce/reduce conflict (reduce 96, reduce 107) on ELSE
143: reduce/reduce conflict (reduce 96, reduce 107) on FOR
143: reduce/reduce conflict (reduce 96, reduce 107) on WHILE
143: reduce/reduce conflict (reduce 96, reduce 107) on DO
143: reduce/reduce conflict (reduce 96, reduce 107) on VOID
143: reduce/reduce conflict (reduce 96, reduce 107) on POW
143: reduce/reduce conflict (reduce 96, reduce 107) on SQUARE_ROOT
143: reduce/reduce conflict (reduce 96, reduce 107) on IDENTIFIER
143: reduce/reduce conflict (reduce 96, reduce 107) on COMMENT
143: reduce/reduce conflict (reduce 96, reduce 107) on LINE_COMMENT
state 143
	declaration : types constant_identifier SEMICOLON .  (96)
	declaration_and_initilization : types constant_identifier SEMICOLON .  (107)

	.  reduce 96


state 144
	function_declaration : function_types IDENTIFIER LP . parameter RP LCB stmts RCB  (127)
	function_declaration : function_types IDENTIFIER LP . parameter RP LCB stmts RETURN assignment_values RCB  (128)
	function_declaration : function_types IDENTIFIER LP . parameter RP LCB stmts RETURN VOID RCB  (129)

	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	.  error

	types  goto 176
	parameter  goto 177


state 145
	function_call : CALL IDENTIFIER LP IDENTIFIER . RP SEMICOLON  (102)

	RP  shift 178
	.  error


state 146
	input_context : term PLUS . input_context  (121)

	IDENTIFIER  shift 20
	.  error

	term  goto 105
	var  goto 41
	input_context  goto 179


state 147
	input_stmt : EGG_IN LP input_context RP .  (119)

	.  reduce 119


state 148
	output_context : term PLUS . output_context  (125)

	BOOL_STMT  shift 107
	STRING_STMT  shift 108
	INT_STMT  shift 109
	DOUBLE_STMT  shift 110
	CHAR_STMT  shift 111
	IDENTIFIER  shift 20
	.  error

	term  goto 112
	var  goto 41
	assignment_values  goto 113
	output_context  goto 180


state 149
	output_context : assignment_values PLUS . output_context  (126)

	BOOL_STMT  shift 107
	STRING_STMT  shift 108
	INT_STMT  shift 109
	DOUBLE_STMT  shift 110
	CHAR_STMT  shift 111
	IDENTIFIER  shift 20
	.  error

	term  goto 112
	var  goto 41
	assignment_values  goto 113
	output_context  goto 181


state 150
	output_stmt : EGG_OUT LP output_context RP .  (120)

	.  reduce 120


state 151
	single_expression : NOT BOOL_STMT .  (47)

	.  reduce 47


state 152
	matched_stmt : IF LP logical_expression RP . stmts  (7)
	unmatched_stmt : IF LP logical_expression RP . stmts  (10)
	unmatched_stmt : IF LP logical_expression RP . matched_stmt ELSE LP unmatched_stmt RP  (12)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 182
	stmt  goto 24
	matched_stmt  goto 183
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 153
	logical_connector : AND .  (52)

	.  reduce 52


state 154
	logical_connector : OR .  (53)

	.  reduce 53


state 155
	recursive_expression : recursive_expression logical_connector . single_expression  (48)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	single_expression  goto 184
	term  goto 120
	var  goto 41


state 156
	logical_operator : NOT .  (56)

	.  reduce 56


state 157
	logical_operator : IS_EQUAL_OP .  (54)

	.  reduce 54


state 158
	logical_operator : NOT_EQUAL_OP .  (55)

	.  reduce 55


state 159
	logical_operator : GT .  (57)

	.  reduce 57


state 160
	logical_operator : LT .  (58)

	.  reduce 58


state 161
	logical_operator : LTE .  (60)

	.  reduce 60


state 162
	logical_operator : GTE .  (59)

	.  reduce 59


state 163
	single_expression : term logical_operator . term  (45)

	IDENTIFIER  shift 20
	.  error

	term  goto 185
	var  goto 41


state 164
	matched_stmt : ELIF LP logical_expression RP . stmts  (8)
	unmatched_stmt : ELIF LP logical_expression RP . stmts  (11)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 186
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 165
	for_loop : FOR LP loop_initialization SEMICOLON . logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB  (39)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 187
	single_expression  goto 118
	recursive_expression  goto 119
	term  goto 120
	var  goto 41


state 166
	declaration_and_initilization : types term . assignment_operator assignment_values SEMICOLON  (106)

	ASSIGN_OP  shift 84
	DIVIDE_ASSIGN_OP  shift 85
	MULTIPLY_ASSIGN_OP  shift 86
	MOD_ASSIGN_OP  shift 87
	PLUS_ASSIGN_OP  shift 88
	MINUS_ASSIGN_OP  shift 89
	.  error

	assignment_operator  goto 142


state 167
	declaration_and_initilization : types constant_identifier . SEMICOLON  (107)

	SEMICOLON  shift 188
	.  error


state 168
	while_loop : WHILE LP logical_expression RP . LCB stmts RCB  (38)

	LCB  shift 189
	.  error


state 169
	do_while_loop : DO LCB stmts RCB . WHILE LP logical_expression RP SEMICOLON  (40)

	WHILE  shift 190
	.  error


state 170
	power : POW LP INT_STMT COMMA . INT_STMT RP  (81)
	power : POW LP INT_STMT COMMA . DOUBLE_STMT RP  (82)

	INT_STMT  shift 191
	DOUBLE_STMT  shift 192
	.  error


state 171
	power : POW LP DOUBLE_STMT COMMA . INT_STMT RP  (83)
	power : POW LP DOUBLE_STMT COMMA . DOUBLE_STMT RP  (84)

	INT_STMT  shift 193
	DOUBLE_STMT  shift 194
	.  error


state 172
	sqrt : SQUARE_ROOT LP INT_STMT RP .  (93)

	.  reduce 93


state 173
	sqrt : SQUARE_ROOT LP DOUBLE_STMT RP .  (94)

	.  reduce 94


state 174
	initialization : term assignment_operator assignment_values SEMICOLON .  (105)

	.  reduce 105


state 175
	declaration_and_initilization : types term assignment_operator assignment_values . SEMICOLON  (106)

	SEMICOLON  shift 195
	.  error


state 176
	parameter : types . IDENTIFIER  (131)

	IDENTIFIER  shift 196
	.  error


state 177
	function_declaration : function_types IDENTIFIER LP parameter . RP LCB stmts RCB  (127)
	function_declaration : function_types IDENTIFIER LP parameter . RP LCB stmts RETURN assignment_values RCB  (128)
	function_declaration : function_types IDENTIFIER LP parameter . RP LCB stmts RETURN VOID RCB  (129)
	parameter : parameter . COMMA types IDENTIFIER  (130)

	RP  shift 197
	COMMA  shift 198
	.  error


state 178
	function_call : CALL IDENTIFIER LP IDENTIFIER RP . SEMICOLON  (102)

	SEMICOLON  shift 199
	.  error


state 179
	input_context : term PLUS input_context .  (121)

	.  reduce 121


state 180
	output_context : term PLUS output_context .  (125)

	.  reduce 125


state 181
	output_context : assignment_values PLUS output_context .  (126)

	.  reduce 126


182: reduce/reduce conflict (reduce 7, reduce 10) on SEMICOLON
state 182
	matched_stmt : IF LP logical_expression RP stmts .  (7)
	unmatched_stmt : IF LP logical_expression RP stmts .  (10)

	.  reduce 7


state 183
	stmt : matched_stmt . SEMICOLON  (4)
	unmatched_stmt : IF LP logical_expression RP matched_stmt . ELSE LP unmatched_stmt RP  (12)

	SEMICOLON  shift 72
	ELSE  shift 200
	.  error


state 184
	recursive_expression : recursive_expression logical_connector single_expression .  (48)

	.  reduce 48


state 185
	single_expression : term logical_operator term .  (45)

	.  reduce 45


186: reduce/reduce conflict (reduce 8, reduce 11) on SEMICOLON
state 186
	matched_stmt : ELIF LP logical_expression RP stmts .  (8)
	unmatched_stmt : ELIF LP logical_expression RP stmts .  (11)

	.  reduce 8


state 187
	for_loop : FOR LP loop_initialization SEMICOLON logical_expression . SEMICOLON arithmetic_operations RP LCB stmts RCB  (39)

	SEMICOLON  shift 201
	.  error


state 188
	declaration_and_initilization : types constant_identifier SEMICOLON .  (107)

	.  reduce 107


state 189
	while_loop : WHILE LP logical_expression RP LCB . stmts RCB  (38)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 202
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 190
	do_while_loop : DO LCB stmts RCB WHILE . LP logical_expression RP SEMICOLON  (40)

	LP  shift 203
	.  error


state 191
	power : POW LP INT_STMT COMMA INT_STMT . RP  (81)

	RP  shift 204
	.  error


state 192
	power : POW LP INT_STMT COMMA DOUBLE_STMT . RP  (82)

	RP  shift 205
	.  error


state 193
	power : POW LP DOUBLE_STMT COMMA INT_STMT . RP  (83)

	RP  shift 206
	.  error


state 194
	power : POW LP DOUBLE_STMT COMMA DOUBLE_STMT . RP  (84)

	RP  shift 207
	.  error


state 195
	declaration_and_initilization : types term assignment_operator assignment_values SEMICOLON .  (106)

	.  reduce 106


state 196
	parameter : types IDENTIFIER .  (131)

	.  reduce 131


state 197
	function_declaration : function_types IDENTIFIER LP parameter RP . LCB stmts RCB  (127)
	function_declaration : function_types IDENTIFIER LP parameter RP . LCB stmts RETURN assignment_values RCB  (128)
	function_declaration : function_types IDENTIFIER LP parameter RP . LCB stmts RETURN VOID RCB  (129)

	LCB  shift 208
	.  error


state 198
	parameter : parameter COMMA . types IDENTIFIER  (130)

	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	.  error

	types  goto 209


state 199
	function_call : CALL IDENTIFIER LP IDENTIFIER RP SEMICOLON .  (102)

	.  reduce 102


state 200
	unmatched_stmt : IF LP logical_expression RP matched_stmt ELSE . LP unmatched_stmt RP  (12)

	LP  shift 210
	.  error


state 201
	for_loop : FOR LP loop_initialization SEMICOLON logical_expression SEMICOLON . arithmetic_operations RP LCB stmts RCB  (39)

	LP  shift 4
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	.  error

	arithmetic_operations  goto 211
	term  goto 53
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49


state 202
	while_loop : WHILE LP logical_expression RP LCB stmts . RCB  (38)

	RCB  shift 212
	.  error


state 203
	do_while_loop : DO LCB stmts RCB WHILE LP . logical_expression RP SEMICOLON  (40)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 213
	single_expression  goto 118
	recursive_expression  goto 119
	term  goto 120
	var  goto 41


state 204
	power : POW LP INT_STMT COMMA INT_STMT RP .  (81)

	.  reduce 81


state 205
	power : POW LP INT_STMT COMMA DOUBLE_STMT RP .  (82)

	.  reduce 82


state 206
	power : POW LP DOUBLE_STMT COMMA INT_STMT RP .  (83)

	.  reduce 83


state 207
	power : POW LP DOUBLE_STMT COMMA DOUBLE_STMT RP .  (84)

	.  reduce 84


state 208
	function_declaration : function_types IDENTIFIER LP parameter RP LCB . stmts RCB  (127)
	function_declaration : function_types IDENTIFIER LP parameter RP LCB . stmts RETURN assignment_values RCB  (128)
	function_declaration : function_types IDENTIFIER LP parameter RP LCB . stmts RETURN VOID RCB  (129)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 214
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 209
	parameter : parameter COMMA types . IDENTIFIER  (130)

	IDENTIFIER  shift 215
	.  error


state 210
	unmatched_stmt : IF LP logical_expression RP matched_stmt ELSE LP . unmatched_stmt RP  (12)

	IF  shift 216
	ELIF  shift 217
	.  error

	unmatched_stmt  goto 218


state 211
	for_loop : FOR LP loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations . RP LCB stmts RCB  (39)

	RP  shift 219
	.  error


state 212
	while_loop : WHILE LP logical_expression RP LCB stmts RCB .  (38)

	.  reduce 38


state 213
	do_while_loop : DO LCB stmts RCB WHILE LP logical_expression . RP SEMICOLON  (40)

	RP  shift 220
	.  error


state 214
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts . RCB  (127)
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts . RETURN assignment_values RCB  (128)
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts . RETURN VOID RCB  (129)

	RCB  shift 221
	RETURN  shift 222
	.  error


state 215
	parameter : parameter COMMA types IDENTIFIER .  (130)

	.  reduce 130


state 216
	unmatched_stmt : IF . LP logical_expression RP stmts  (10)
	unmatched_stmt : IF . LP logical_expression RP matched_stmt ELSE LP unmatched_stmt RP  (12)

	LP  shift 223
	.  error


state 217
	unmatched_stmt : ELIF . LP logical_expression RP stmts  (11)

	LP  shift 224
	.  error


state 218
	unmatched_stmt : IF LP logical_expression RP matched_stmt ELSE LP unmatched_stmt . RP  (12)

	RP  shift 225
	.  error


state 219
	for_loop : FOR LP loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations RP . LCB stmts RCB  (39)

	LCB  shift 226
	.  error


state 220
	do_while_loop : DO LCB stmts RCB WHILE LP logical_expression RP . SEMICOLON  (40)

	SEMICOLON  shift 227
	.  error


state 221
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RCB .  (127)

	.  reduce 127


state 222
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RETURN . assignment_values RCB  (128)
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RETURN . VOID RCB  (129)

	VOID  shift 228
	BOOL_STMT  shift 107
	STRING_STMT  shift 108
	INT_STMT  shift 109
	DOUBLE_STMT  shift 110
	CHAR_STMT  shift 111
	.  error

	assignment_values  goto 229


state 223
	unmatched_stmt : IF LP . logical_expression RP stmts  (10)
	unmatched_stmt : IF LP . logical_expression RP matched_stmt ELSE LP unmatched_stmt RP  (12)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 230
	single_expression  goto 118
	recursive_expression  goto 119
	term  goto 120
	var  goto 41


state 224
	unmatched_stmt : ELIF LP . logical_expression RP stmts  (11)

	NOT  shift 115
	BOOL_STMT  shift 116
	IDENTIFIER  shift 20
	.  error

	logical_expression  goto 231
	single_expression  goto 118
	recursive_expression  goto 119
	term  goto 120
	var  goto 41


state 225
	unmatched_stmt : IF LP logical_expression RP matched_stmt ELSE LP unmatched_stmt RP .  (12)

	.  reduce 12


state 226
	for_loop : FOR LP loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations RP LCB . stmts RCB  (39)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 232
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 227
	do_while_loop : DO LCB stmts RCB WHILE LP logical_expression RP SEMICOLON .  (40)

	.  reduce 40


state 228
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RETURN VOID . RCB  (129)

	RCB  shift 233
	.  error


state 229
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values . RCB  (128)

	RCB  shift 234
	.  error


state 230
	unmatched_stmt : IF LP logical_expression . RP stmts  (10)
	unmatched_stmt : IF LP logical_expression . RP matched_stmt ELSE LP unmatched_stmt RP  (12)

	RP  shift 235
	.  error


state 231
	unmatched_stmt : ELIF LP logical_expression . RP stmts  (11)

	RP  shift 236
	.  error


state 232
	for_loop : FOR LP loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations RP LCB stmts . RCB  (39)

	RCB  shift 237
	.  error


state 233
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RETURN VOID RCB .  (129)

	.  reduce 129


state 234
	function_declaration : function_types IDENTIFIER LP parameter RP LCB stmts RETURN assignment_values RCB .  (128)

	.  reduce 128


state 235
	unmatched_stmt : IF LP logical_expression RP . stmts  (10)
	unmatched_stmt : IF LP logical_expression RP . matched_stmt ELSE LP unmatched_stmt RP  (12)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 238
	stmt  goto 24
	matched_stmt  goto 183
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 236
	unmatched_stmt : ELIF LP logical_expression RP . stmts  (11)

	CALL  shift 3
	LP  shift 4
	EGG_IN  shift 5
	EGG_OUT  shift 6
	INT  shift 7
	DOUBLE  shift 8
	STRING  shift 9
	CHAR  shift 10
	BOOL  shift 11
	IF  shift 12
	ELIF  shift 13
	FOR  shift 14
	WHILE  shift 15
	DO  shift 16
	VOID  shift 17
	POW  shift 18
	SQUARE_ROOT  shift 19
	IDENTIFIER  shift 20
	COMMENT  shift 21
	LINE_COMMENT  shift 22
	.  error

	stmts  goto 239
	stmt  goto 24
	matched_stmt  goto 25
	unmatched_stmt  goto 26
	non_if_stmt  goto 27
	loops  goto 28
	arithmetic_operations  goto 29
	function_call  goto 30
	function_declaration  goto 31
	declaration  goto 32
	initialization  goto 33
	declaration_and_initilization  goto 34
	input_stmt  goto 35
	output_stmt  goto 36
	while_loop  goto 37
	for_loop  goto 38
	do_while_loop  goto 39
	term  goto 40
	var  goto 41
	addition  goto 42
	subtraction  goto 43
	division  goto 44
	multiplication  goto 45
	modulo  goto 46
	power  goto 47
	sqrt  goto 48
	factor  goto 49
	types  goto 50
	function_types  goto 51


state 237
	for_loop : FOR LP loop_initialization SEMICOLON logical_expression SEMICOLON arithmetic_operations RP LCB stmts RCB .  (39)

	.  reduce 39


state 238
	unmatched_stmt : IF LP logical_expression RP stmts .  (10)

	.  reduce 10


state 239
	unmatched_stmt : ELIF LP logical_expression RP stmts .  (11)

	.  reduce 11


Rules never reduced:
	sign : PLUS  (86)
	sign : MINUS  (87)
	max : MAX LP INT_STMT COMMA INT_STMT RP  (89)
	max : MAX LP DOUBLE_STMT COMMA DOUBLE_STMT RP  (90)
	min : MIN LP INT_STMT COMMA INT_STMT RP  (91)
	min : MIN LP DOUBLE_STMT RP COMMA DOUBLE_STMT RP  (92)
	function_types : types  (103)


State 27 contains 1 shift/reduce conflict.
State 40 contains 40 reduce/reduce conflicts.
State 49 contains 21 reduce/reduce conflicts.
State 50 contains 1 shift/reduce conflict.
State 53 contains 2 reduce/reduce conflicts.
State 58 contains 1 reduce/reduce conflict.
State 118 contains 2 reduce/reduce conflicts.
State 143 contains 20 reduce/reduce conflicts.
State 182 contains 1 reduce/reduce conflict.
State 186 contains 1 reduce/reduce conflict.


74 terminals, 46 nonterminals
132 grammar rules, 240 states
